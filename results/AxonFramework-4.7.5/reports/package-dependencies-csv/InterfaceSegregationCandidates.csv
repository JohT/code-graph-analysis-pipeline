"dependentTypeFullQualifiedName","declaredMethods","calledMethodNames","calledMethods","callerTypes"
"org.axonframework.commandhandling.CommandMessage",11,"getCommandName",1,20
"org.axonframework.eventhandling.TrackedEventMessage",7,"trackingToken",1,14
"org.axonframework.eventhandling.DomainEventMessage",13,"getSequenceNumber",1,11
"org.axonframework.eventhandling.EventMessage",13,"getIdentifier",1,9
"org.axonframework.messaging.Message",13,"getPayload",1,9
"org.axonframework.eventhandling.DomainEventMessage",13,"getSequenceNumber","getType","getAggregateIdentifier",3,8
"org.axonframework.eventhandling.EventMessage",13,"getTimestamp","getIdentifier",2,8
"org.axonframework.serialization.Serializer",6,"deserialize","serialize",2,8
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage",1,7
"org.axonframework.messaging.ResultMessage",16,"exceptionResult","isExceptional",2,7
"org.axonframework.messaging.Message",13,"getMetaData",1,6
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"unwrap",1,6
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"annotationAttributes",1,6
"org.axonframework.deadline.DeadlineMessage",12,"getDeadlineName",1,6
"org.axonframework.serialization.Serializer",6,"serialize",1,6
"org.axonframework.messaging.MessageDispatchInterceptor",4,"handle",1,6
"org.axonframework.tracing.SpanFactory",18,"createInternalSpan",1,5
"org.axonframework.eventhandling.DomainEventMessage",13,"getSequenceNumber","getAggregateIdentifier",2,5
"org.axonframework.messaging.Message",13,"getIdentifier",1,5
"org.axonframework.serialization.Serializer",6,"deserialize",1,5
"org.axonframework.commandhandling.distributed.CommandMessageFilter",4,"matches",1,5
"org.axonframework.common.transaction.TransactionManager",4,"executeInTransaction",1,5
"org.axonframework.monitoring.MessageMonitor",4,"onMessageIngested",1,5
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onPrepareCommit",1,4
"org.axonframework.eventhandling.DomainEventMessage",13,"getAggregateIdentifier",1,4
"org.axonframework.messaging.Message",13,"andMetaData","withMetaData",2,4
"org.axonframework.messaging.Message",13,"getPayload","getPayloadType",2,4
"org.axonframework.messaging.Message",13,"getPayloadType",1,4
"org.axonframework.modelling.command.Aggregate",9,"handle",1,4
"org.axonframework.messaging.responsetypes.ResponseType",7,"matches",1,4
"org.axonframework.serialization.SerializedType",7,"getName","getRevision",2,4
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"execute","attachTransaction",2,3
"org.axonframework.tracing.Span",26,"runSupplier",1,3
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"of",1,3
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"asStream",1,3
"org.axonframework.modelling.command.inspection.AggregateModel",14,"type",1,3
"org.axonframework.eventhandling.DomainEventMessage",13,"getType",1,3
"org.axonframework.eventhandling.EventMessage",13,"getTimestamp",1,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","handle",2,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle",1,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"payloadType","unwrap",2,3
"org.axonframework.modelling.saga.AssociationValues",8,"removedAssociations","addedAssociations",2,3
"org.axonframework.serialization.SerializedType",7,"getName",1,3
"org.axonframework.serialization.SerializedObject",6,"getType","getData",2,3
"org.axonframework.serialization.SerializedObject",6,"getContentType","getData",2,3
"org.axonframework.serialization.Serializer",6,"deserialize","typeForClass",2,3
"org.axonframework.common.transaction.TransactionManager",4,"startTransaction",1,3
"org.axonframework.messaging.MessageHandler",4,"getTargetType",1,3
"org.axonframework.serialization.Converter",4,"convert",1,3
"org.axonframework.config.Configuration",49,"getComponent",1,2
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","executeWithResult",2,2
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onRollback",1,2
"org.axonframework.eventsourcing.eventstore.EventStorageEngine",21,"readEvents",1,2
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","next","hasNext","getLastSequenceNumber",4,2
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek",1,2
"org.axonframework.eventhandling.EventMessage",13,"andMetaData",1,2
"org.axonframework.eventhandling.EventMessage",13,"andMetaData","getIdentifier",2,2
"org.axonframework.messaging.Message",13,"getPayload","getMetaData",2,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","unwrap",2,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","unwrap","handle",3,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"signature","unwrap",2,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"handle",1,2
"org.axonframework.modelling.command.inspection.EntityModel",12,"modelOf",1,2
"org.axonframework.queryhandling.SubscriptionQueryMessage",12,"getUpdateResponseType",1,2
"org.axonframework.queryhandling.QueryMessage",10,"getQueryName","getResponseType",2,2
"org.axonframework.common.caching.Cache",9,"put","get",2,2
"org.axonframework.eventhandling.EventHandlerInvoker",9,"performReset","supportsReset",2,2
"org.axonframework.modelling.command.Aggregate",9,"identifierAsString",1,2
"org.axonframework.modelling.command.Repository",9,"newInstance",1,2
"org.axonframework.modelling.saga.AssociationValues",8,"asSet",1,2
"org.axonframework.eventhandling.DomainEventData",7,"getAggregateIdentifier","getSequenceNumber","getType",3,2
"org.axonframework.eventhandling.TrackedEventMessage",7,"trackingToken","withTrackingToken",2,2
"org.axonframework.serialization.SerializedType",7,"getName","emptyType",2,2
"org.axonframework.serialization.SerializedType",7,"getRevision",1,2
"org.axonframework.monitoring.MessageMonitor$MonitorCallback",6,"reportIgnored","reportSuccess","reportFailure",3,2
"org.axonframework.monitoring.MessageMonitor$MonitorCallback",6,"reportSuccess","reportFailure",2,2
"org.axonframework.serialization.SerializedObject",6,"getType",1,2
"org.axonframework.serialization.SerializedObject",6,"getType","getContentType","getData",3,2
"org.axonframework.serialization.Serializer",6,"getConverter",1,2
"org.axonframework.eventhandling.EventTrackerStatusChangeListener",4,"onEventTrackerStatusChange",1,2
"org.axonframework.messaging.MessageHandler",4,"handle",1,2
"org.axonframework.config.EventProcessingConfigurer",59,"registerPooledStreamingEventProcessor","assignHandlerInstancesMatching","usingPooledStreamingEventProcessors","byDefaultAssignHandlerInstancesTo","registerSubscribingEventProcessor","registerMessageMonitorFactory","lambda$registerPooledStreamingEventProcessor$5","assignHandlerTypesMatching","byDefaultAssignHandlerTypesTo","lambda$registerSaga$0","lambda$byDefaultAssignTo$2","lambda$registerTrackingEventProcessor$1","lambda$byDefaultAssignTo$3","registerTrackingEventProcessor","lambda$registerMessageMonitor$4","registerPooledStreamingEventProcessorConfiguration","registerSaga",18,1
"org.axonframework.config.Configuration",49,"eventProcessingConfiguration","spanFactory","handlerDefinition","resourceInjector","parameterResolverFactory",5,1
"org.axonframework.config.Configuration",49,"eventProcessingConfiguration",1,1
"org.axonframework.config.Configuration",49,"eventProcessingConfiguration","findModules",2,1
"org.axonframework.config.Configuration",49,"snapshotFilter","spanFactory","eventSerializer","scopeAwareProvider","commandBus","messageSerializer","findModules","correlationDataProviders","getComponent","messageMonitor","serializer","handlerDefinition","queryBus","upcasterChain","parameterResolverFactory","repository","eventStore","eventBus",19,1
"org.axonframework.config.Configuration",49,"lambda$aggregateConfiguration$7","lambda$getComponent$8","lambda$eventProcessingConfiguration$3","lambda$aggregateConfiguration$5","findModules","getComponent","lambda$findModules$1","lambda$aggregateConfiguration$6","getModules","lambda$resourceInjector$2","lambda$findModules$0","lambda$eventProcessingConfiguration$4","aggregateConfiguration","eventBus",15,1
"org.axonframework.config.Configuration",49,"start",1,1
"org.axonframework.config.Configuration",49,"spanFactory","correlationDataProviders","messageMonitor","handlerDefinition","parameterResolverFactory","eventBus","getComponent",7,1
"org.axonframework.config.Configuration",49,"spanFactory","commandBus","handlerDefinition","parameterResolverFactory","repository","eventStore","eventBus","getComponent",8,1
"org.axonframework.config.Configuration",49,"eventBus",1,1
"org.axonframework.test.aggregate.ResultValidator",47,"expectEvents",1,1
"org.axonframework.config.Configurer",42,"configureAggregate","buildConfiguration","configureMessageMonitor","registerQueryHandler","registerCommandHandler","eventProcessing","registerComponent","lambda$configureMessageMonitor$1","lambda$configureMessageMonitor$0","registerModule",11,1
"org.axonframework.config.Configurer",42,"registerComponent","configureEmbeddedEventStore",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","phase","root",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","phase",3,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","onRollback","onCleanup","parent",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","attachTransaction","resources","onPrepareCommit",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","root",3,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrDefaultResource","isRolledBack","getOrComputeResource","getExecutionResult","onCommit","onRollback","phase","root","resources","onCleanup","onPrepareCommit","parent",13,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"rollback","lambda$attachTransaction$0","execute","lambda$execute$2","lambda$attachTransaction$1","executeWithResult","onCommit","onRollback","phase","resources","parent",11,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getCorrelationData","commit",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"registerCorrelationDataProvider",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","getOrComputeResource","onRollback","phase","root","onPrepareCommit",6,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","executeWithResult",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","getExecutionResult",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","attachTransaction","getResource","resources","onPrepareCommit",5,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","isRolledBack","executeWithResult",3,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getOrComputeResource","getResource",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getOrComputeResource","root","onCleanup","onPrepareCommit",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","getExecutionResult","onRollback","resources","onPrepareCommit","executeWithResult",6,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","getExecutionResult","onRollback","onCleanup","executeWithResult",5,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","getExecutionResult","onRollback","executeWithResult",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getExecutionResult",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getExecutionResult","onCommit","onRollback","phase","getResource","root","resources","onCleanup",8,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onCommit","onRollback",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getResource",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getResource","resources",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"root","onCleanup",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onCleanup",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onCleanup","onPrepareCommit",2,1
"org.axonframework.eventhandling.tokenstore.TokenStore",26,"fetchToken","lambda$fetchAvailableSegments$0","releaseClaim","fetchSegments","storeToken",5,1
"org.axonframework.tracing.Span",26,"runConsumer","lambda$wrapConsumer$4","lambda$wrapSupplier$3","lambda$wrapCallable$2","end","runSupplier","lambda$wrapRunnable$1","recordException","lambda$makeCurrent$0","makeCurrent","start","runCallable","run",13,1
"org.axonframework.tracing.Span",26,"end","recordException","makeCurrent","start","wrapRunnable",5,1
"org.axonframework.tracing.Span",26,"end","recordException","makeCurrent","start","runCallable",5,1
"org.axonframework.tracing.Span",26,"runCallable",1,1
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",25,"getType","getMetaData","getData","getAggregateType","getTimestamp","getAggregateIdentifier","getSequenceNumber","getTrackingToken","getMessageIdentifier",9,1
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",25,"getMetaData","getData","getAggregateType","getTimestamp","getAggregateIdentifier","getSequenceNumber","getTrackingToken","getMessageIdentifier",8,1
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",25,"getData","upcast",2,1
"org.axonframework.config.EventProcessingConfiguration",23,"sagaProcessingGroup","listenerInvocationErrorHandler","sagaEventProcessor",3,1
"org.axonframework.config.EventProcessingConfiguration",23,"sagaProcessingGroup","eventProcessorByProcessingGroup","sagaConfigurations","eventProcessor","lambda$sagaConfiguration$0","eventProcessors",6,1
"org.axonframework.config.EventProcessingConfiguration",23,"sagaStore",1,1
"org.axonframework.eventsourcing.eventstore.EventStorageEngine",21,"readEvents","createTailToken","lastSequenceNumberFor","createTokenAt","createHeadToken","appendEvents","readSnapshot","storeSnapshot",9,1
"org.axonframework.eventsourcing.eventstore.EventStorageEngine",21,"readEvents","appendEvents",3,1
"org.axonframework.messaging.deadletter.SequencedDeadLetterQueue",19,"contains","enqueue","lambda$process$0","process",4,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","hasNext",2,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","next","hasNext",3,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","hasNext","filter",3,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"lambda$of$1","next","of","lambda$of$0",6,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"getLastSequenceNumber","of","asStream",3,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"getLastSequenceNumber",1,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"concat","of",3,1
"org.axonframework.tracing.SpanFactory",18,"createRootTrace","createInternalSpan",2,1
"org.axonframework.tracing.SpanFactory",18,"createHandlerSpan",1,1
"org.axonframework.queryhandling.QueryResponseMessage",17,"andMetaData","withMetaData",2,1
"org.axonframework.eventhandling.EventTrackerStatus",16,"mergeCompletedPosition","isCaughtUp","isErrorState","trackerAdded","getCurrentPosition","getTrackingToken","getSegment","getError","trackerRemoved","getResetPosition","isMerging","isReplaying",12,1
"org.axonframework.eventhandling.EventTrackerStatus",16,"mergeCompletedPosition","isCaughtUp","isErrorState","matchPositions","getCurrentPosition","isDifferent","matchStates","getResetPosition","isMerging","isReplaying",10,1
"org.axonframework.eventhandling.EventTrackerStatus",16,"isCaughtUp","isReplaying",2,1
"org.axonframework.eventhandling.StreamingEventProcessor",16,"lambda$isReplaying$0","processingStatus","resetTokens",3,1
"org.axonframework.messaging.ResultMessage",16,"exceptionDetails","isExceptional","optionalExceptionResult","withMetaData","andMetaData",5,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"withDiagnostics",1,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"withDiagnostics","diagnostics",2,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"markTouched","message","withCause","lastTouched","cause",5,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"diagnostics",1,1
"org.axonframework.test.aggregate.TestExecutor",16,"whenThenTimeAdvancesTo","whenTimeAdvancesTo","whenThenTimeElapses","whenTimeElapses",4,1
"org.axonframework.queryhandling.QueryGateway",15,"subscriptionQuery","streamingQuery","query","scatterGather",8,1
"org.axonframework.queryhandling.QueryUpdateEmitter",15,"lambda$completeExceptionally$2","lambda$complete$1","lambda$emit$0","emit","complete","completeExceptionally",7,1
"org.axonframework.queryhandling.QueryUpdateEmitter",15,"registerUpdateHandler","queryUpdateHandlerRegistered",3,1
"org.axonframework.commandhandling.CommandResultMessage",14,"andMetaData","withMetaData",2,1
"org.axonframework.modelling.command.inspection.AggregateModel",14,"declaredType",1,1
"org.axonframework.modelling.command.inspection.AggregateModel",14,"declaredType","type","getVersion",3,1
"org.axonframework.modelling.command.inspection.AggregateModel",14,"type","types",2,1
"org.axonframework.modelling.command.inspection.AggregateModel",14,"types",1,1
"org.axonframework.eventhandling.DomainEventMessage",13,"withMetaData","andMetaData",2,1
"org.axonframework.eventhandling.EventMessage",13,"withMetaData","andMetaData",2,1
"org.axonframework.messaging.Message",13,"andMetaData","withMetaData","getPayload","getMetaData",4,1
"org.axonframework.messaging.Message",13,"getPayload","getMetaData","getPayloadType",3,1
"org.axonframework.messaging.Message",13,"getPayload","serializeMetaData","getMetaData","getPayloadType","getIdentifier","serializePayload",6,1
"org.axonframework.messaging.Message",13,"getMetaData","getIdentifier",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","attribute","hasAnnotation","priority","canHandleMessageType","payloadType","unwrap","handle","annotationAttributes",9,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","attribute","hasAnnotation","priority","canHandleMessageType","canHandleType","payloadType","unwrap","handle","annotationAttributes",10,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","canHandleMessageType","canHandleType","handle",4,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"lambda$declaringClass$0","unwrap",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"attribute",1,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"attribute","unwrap",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"attribute","priority","payloadType","unwrap",4,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"hasAnnotation",1,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"unwrap","handle",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"unwrap","annotationAttributes",2,1
"org.axonframework.deadline.DeadlineMessage",12,"withMetaData","andMetaData",2,1
"org.axonframework.eventhandling.WrappedToken",12,"lowerBound","upperBound","advancedTo","unwrap",4,1
"org.axonframework.eventhandling.WrappedToken",12,"unwrapLowerBound",1,1
"org.axonframework.eventhandling.WrappedToken",12,"advance",1,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"modelOf","getIdentifier",2,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"commandHandlers","commandHandlerInterceptors","entityClass",3,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"commandHandlers","publish","commandHandlerInterceptors","entityClass",4,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"commandHandlers","routingKey","entityClass",3,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"routingKey","getIdentifier",2,1
"org.axonframework.queryhandling.SubscriptionQueryMessage",12,"andMetaData","withMetaData",2,1
"org.axonframework.commandhandling.CommandMessage",11,"withMetaData",1,1
"org.axonframework.commandhandling.CommandMessage",11,"withMetaData","andMetaData",2,1
"org.axonframework.commandhandling.CommandMessage",11,"andMetaData",1,1
"org.axonframework.deadline.DeadlineManager",11,"schedule","cancelAllWithinScope",5,1
"org.axonframework.eventsourcing.snapshotting.SnapshotFilter",10,"combine","allowAll",2,1
"org.axonframework.eventsourcing.snapshotting.SnapshotFilter",10,"lambda$allowAll$1","allow","lambda$combine$0","lambda$rejectAll$2",4,1
"org.axonframework.messaging.StreamableMessageSource",10,"createHeadToken",1,1
"org.axonframework.messaging.StreamableMessageSource",10,"createTokenAt",1,1
"org.axonframework.modelling.saga.Saga",10,"getSagaIdentifier",1,1
"org.axonframework.modelling.saga.Saga",10,"getSagaIdentifier","isActive","getAssociationValues",3,1
"org.axonframework.modelling.saga.Saga",10,"prepareReset",1,1
"org.axonframework.queryhandling.QueryMessage",10,"withMetaData","andMetaData","getQueryName",3,1
"org.axonframework.queryhandling.QueryMessage",10,"queryName",1,1
"org.axonframework.queryhandling.QueryMessage",10,"getQueryName",1,1
"org.axonframework.common.caching.Cache",9,"computeIfAbsent","put","computeIfPresent","remove","get",5,1
"org.axonframework.common.caching.Cache",9,"put","remove","get",3,1
"org.axonframework.common.caching.Cache",9,"remove",1,1
"org.axonframework.eventhandling.EventHandlerInvoker",9,"performReset","supportsReset","canHandle","handle","canHandleType",5,1
"org.axonframework.eventhandling.EventHandlerInvoker",9,"performReset",1,1
"org.axonframework.lifecycle.Lifecycle$LifecycleRegistry",9,"onStart","onShutdown",2,1
"org.axonframework.lifecycle.Lifecycle$LifecycleRegistry",9,"onShutdown","lambda$onStart$0","lambda$onShutdown$1","onStart",4,1
"org.axonframework.lifecycle.Lifecycle$LifecycleRegistry",9,"onShutdown",1,1
"org.axonframework.modelling.command.Aggregate",9,"execute","isDeleted",2,1
"org.axonframework.modelling.command.Aggregate",9,"rootType","identifier","identifierAsString","version","handle","isDeleted",6,1
"org.axonframework.modelling.command.Aggregate",9,"identifier","handle",2,1
"org.axonframework.modelling.command.Aggregate",9,"identifier",1,1
"org.axonframework.modelling.command.Aggregate",9,"identifierAsString","version",2,1
"org.axonframework.modelling.command.Aggregate",9,"identifierAsString","handle",2,1
"org.axonframework.modelling.command.Aggregate",9,"version","handle",2,1
"org.axonframework.modelling.command.Repository",9,"newInstance","load","loadOrCreate",3,1
"org.axonframework.queryhandling.SubscriptionQueryResult",9,"lambda$null$0","updates","lambda$handle$2","lambda$handle$1","initialResult",5,1
"org.axonframework.common.stream.BlockingStream",8,"hasNextAvailable","nextAvailable","peek","close",5,1
"org.axonframework.common.stream.BlockingStream",8,"hasNextAvailable","nextAvailable","peek","skipMessagesWithPayloadTypeOf",5,1
"org.axonframework.common.stream.BlockingStream",8,"hasNextAvailable",1,1
"org.axonframework.common.stream.BlockingStream",8,"setOnAvailableCallback","nextAvailable","peek","skipMessagesWithPayloadTypeOf","hasNextAvailable",5,1
"org.axonframework.common.stream.BlockingStream",8,"nextAvailable","hasNextAvailable",2,1
"org.axonframework.common.stream.BlockingStream",8,"nextAvailable",1,1
"org.axonframework.common.stream.BlockingStream",8,"close",1,1
"org.axonframework.config.LifecycleOperations",8,"onShutdown","onStart",2,1
"org.axonframework.eventhandling.EventMessageHandler",8,"prepareReset","handle",2,1
"org.axonframework.eventhandling.EventMessageHandler",8,"prepareReset","handle","supportsReset",3,1
"org.axonframework.eventhandling.EventMessageHandler",8,"handle",1,1
"org.axonframework.eventhandling.TrackingToken",8,"lowerBound",1,1
"org.axonframework.eventhandling.TrackingToken",8,"covers","position",2,1
"org.axonframework.eventsourcing.eventstore.EventStore",8,"lambda$readEvents$0","readEvents",2,1
"org.axonframework.eventsourcing.eventstore.EventStore",8,"readEvents",1,1
"org.axonframework.modelling.saga.AssociationValues",8,"add",1,1
"org.axonframework.modelling.saga.AssociationValues",8,"add","remove","contains",3,1
"org.axonframework.modelling.saga.AssociationValues",8,"removedAssociations","asSet","addedAssociations",3,1
"org.axonframework.modelling.saga.AssociationValues",8,"removedAssociations","asSet","contains","commit",4,1
"org.axonframework.queryhandling.QueryBus",8,"subscriptionQuery","query","scatterGather","streamingQuery",5,1
"org.axonframework.queryhandling.QueryBus",8,"query",1,1
"org.axonframework.queryhandling.QueryBus",8,"subscriptionQuery",1,1
"org.axonframework.queryhandling.QueryBus",8,"subscribe",1,1
"org.axonframework.queryhandling.SubscriptionQueryUpdateMessage",8,"withMetaData","andMetaData",2,1
"org.axonframework.commandhandling.gateway.CommandGateway",7,"sendAndWait","send",3,1
"org.axonframework.eventhandling.DomainEventData",7,"getSequenceNumber",1,1
"org.axonframework.eventhandling.DomainEventData",7,"getType",1,1
"org.axonframework.eventhandling.EventProcessor",7,"shutDown",1,1
"org.axonframework.eventhandling.EventProcessor",7,"getHandlerInterceptors",1,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"convert","responseMessagePayloadType",2,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"responseMessagePayloadType",1,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"matchRank",1,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"getExpectedResponseType",1,1
"org.axonframework.queryhandling.StreamingQueryMessage",7,"withMetaData","andMetaData",2,1
"org.axonframework.queryhandling.StreamingQueryMessage",7,"getResponseType",1,1
"org.axonframework.eventhandling.scheduling.EventScheduler",6,"cancelSchedule","schedule",3,1
"org.axonframework.messaging.deadletter.EnqueueDecision",6,"shouldEnqueue","withDiagnostics","enqueueCause",3,1
"org.axonframework.modelling.saga.metamodel.SagaModel",6,"findHandlerMethods",1,1
"org.axonframework.monitoring.MessageMonitor$MonitorCallback",6,"reportFailure",1,1
"org.axonframework.serialization.SerializedObject",6,"getType","getContentType",2,1
"org.axonframework.serialization.SerializedObject",6,"getContentType",1,1
"org.axonframework.serialization.Serializer",6,"deserialize","classForType",2,1
"org.axonframework.serialization.Serializer",6,"getConverter","typeForClass","serialize",3,1
"org.axonframework.serialization.Serializer",6,"getConverter","serialize",2,1
"org.axonframework.serialization.Serializer",6,"classForType",1,1
"org.axonframework.config.EventProcessingConfigurer$DeadLetteringInvokerConfiguration",5,"lambda$andThen$0","lambda$noOp$1",2,1
"org.axonframework.config.EventProcessingConfigurer$DeadLetteringInvokerConfiguration",5,"noOp",1,1
"org.axonframework.config.EventProcessingConfigurer$PooledStreamingProcessorConfiguration",5,"lambda$noOp$1","lambda$andThen$0",2,1
"org.axonframework.config.EventProcessingConfigurer$PooledStreamingProcessorConfiguration",5,"noOp","andThen",2,1
"org.axonframework.config.EventProcessingConfigurer$PooledStreamingProcessorConfiguration",5,"noOp",1,1
"org.axonframework.messaging.HandlerAttributes",5,"getAll","isEmpty",2,1
"org.axonframework.messaging.HandlerAttributes",5,"get",1,1
"org.axonframework.config.AggregateConfiguration",4,"repository",1,1
"org.axonframework.eventhandling.EventTrackerStatusChangeListener",4,"lambda$noOp$0",1,1
"org.axonframework.eventhandling.EventTrackerStatusChangeListener",4,"noOp",1,1
"org.axonframework.eventsourcing.SnapshotTriggerDefinition",4,"prepareTrigger",1,1

"Source Cypher Query:","Candidates_for_Interface_Segregation.cypher"

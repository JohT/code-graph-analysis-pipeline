"dependentTypeFullQualifiedName","declaredMethods","calledMethodNames","calledMethods","callerTypes"
"org.axonframework.commandhandling.CommandMessage",11,"getCommandName",1,20
"org.axonframework.eventhandling.TrackedEventMessage",7,"trackingToken",1,14
"org.axonframework.eventhandling.DomainEventMessage",13,"getSequenceNumber",1,11
"org.axonframework.eventhandling.EventMessage",13,"getIdentifier",1,9
"org.axonframework.eventhandling.DomainEventMessage",13,"getSequenceNumber","getType","getAggregateIdentifier",3,8
"org.axonframework.eventhandling.EventMessage",13,"getTimestamp","getIdentifier",2,8
"org.axonframework.messaging.Message",13,"getPayload",1,8
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage",1,7
"org.axonframework.messaging.ResultMessage",16,"isExceptional","exceptionResult",2,7
"org.axonframework.messaging.Message",13,"getMetaData",1,6
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"annotationAttributes",1,6
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"unwrap",1,6
"org.axonframework.deadline.DeadlineMessage",12,"getDeadlineName",1,6
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan",1,6
"org.axonframework.eventhandling.DomainEventMessage",13,"getSequenceNumber","getAggregateIdentifier",2,5
"org.axonframework.messaging.Message",13,"getPayload","getPayloadType",2,5
"org.axonframework.messaging.Message",13,"getIdentifier",1,5
"org.axonframework.commandhandling.distributed.CommandMessageFilter",4,"matches",1,5
"org.axonframework.common.transaction.TransactionManager",4,"executeInTransaction",1,5
"org.axonframework.messaging.MessageDispatchInterceptor",4,"handle",1,5
"org.axonframework.monitoring.MessageMonitor",4,"onMessageIngested",1,5
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onPrepareCommit",1,4
"org.axonframework.eventhandling.DomainEventMessage",13,"getAggregateIdentifier",1,4
"org.axonframework.messaging.Message",13,"andMetaData","withMetaData",2,4
"org.axonframework.messaging.Message",13,"getPayloadType",1,4
"org.axonframework.modelling.command.Aggregate",9,"handle",1,4
"org.axonframework.tracing.SpanFactory",9,"createLinkedHandlerSpan",1,4
"org.axonframework.messaging.responsetypes.ResponseType",7,"matches",1,4
"org.axonframework.serialization.SerializedType",7,"getRevision","getName",2,4
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"execute","attachTransaction",2,3
"org.axonframework.tracing.Span",26,"runSupplier",1,3
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"of",1,3
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"asStream",1,3
"org.axonframework.modelling.command.inspection.AggregateModel",14,"type",1,3
"org.axonframework.eventhandling.EventMessage",13,"getTimestamp",1,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle",1,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","handle",2,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"unwrap","payloadType",2,3
"org.axonframework.serialization.Serializer",11,"typeForClass","deserialize",2,3
"org.axonframework.modelling.saga.AssociationValues",8,"addedAssociations","removedAssociations",2,3
"org.axonframework.serialization.SerializedType",7,"getName",1,3
"org.axonframework.common.transaction.TransactionManager",4,"startTransaction",1,3
"org.axonframework.messaging.MessageHandler",4,"getTargetType",1,3
"org.axonframework.serialization.Converter",4,"convert",1,3
"org.axonframework.config.Configuration",49,"getComponent",1,2
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onRollback",1,2
"org.axonframework.eventsourcing.eventstore.EventStorageEngine",21,"readEvents",1,2
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","next","hasNext","getLastSequenceNumber",4,2
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek",1,2
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",14,"getMessageIdentifier","getAggregateIdentifier","getMetaData","getTrackingToken","getData","getSequenceNumber","getTimestamp","getType","getAggregateType",9,2
"org.axonframework.eventhandling.DomainEventMessage",13,"getType",1,2
"org.axonframework.eventhandling.EventMessage",13,"getIdentifier","andMetaData",2,2
"org.axonframework.eventhandling.EventMessage",13,"andMetaData",1,2
"org.axonframework.messaging.Message",13,"getPayload","getMetaData",2,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"signature","unwrap",2,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","unwrap",2,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","unwrap","handle",3,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"handle",1,2
"org.axonframework.modelling.command.inspection.EntityModel",12,"modelOf",1,2
"org.axonframework.queryhandling.SubscriptionQueryMessage",12,"getUpdateResponseType",1,2
"org.axonframework.serialization.Serializer",11,"serialize",1,2
"org.axonframework.serialization.Serializer",11,"getConverter",1,2
"org.axonframework.queryhandling.QueryMessage",10,"getQueryName","getResponseType",2,2
"org.axonframework.common.caching.Cache",9,"put","get",2,2
"org.axonframework.modelling.command.Aggregate",9,"identifierAsString",1,2
"org.axonframework.modelling.command.Repository",9,"newInstance",1,2
"org.axonframework.modelling.saga.AssociationValues",8,"asSet",1,2
"org.axonframework.eventhandling.DomainEventData",7,"getSequenceNumber","getAggregateIdentifier","getType",3,2
"org.axonframework.eventhandling.TrackedEventMessage",7,"withTrackingToken","trackingToken",2,2
"org.axonframework.serialization.SerializedType",7,"emptyType","getName",2,2
"org.axonframework.serialization.SerializedType",7,"getRevision",1,2
"org.axonframework.eventhandling.EventHandlerInvoker",6,"performReset","supportsReset",2,2
"org.axonframework.monitoring.MessageMonitor$MonitorCallback",6,"reportIgnored","reportFailure","reportSuccess",3,2
"org.axonframework.monitoring.MessageMonitor$MonitorCallback",6,"reportFailure","reportSuccess",2,2
"org.axonframework.eventhandling.EventTrackerStatusChangeListener",4,"onEventTrackerStatusChange",1,2
"org.axonframework.messaging.MessageHandler",4,"handle",1,2
"org.axonframework.config.EventProcessingConfigurer",59,"registerPooledStreamingEventProcessorConfiguration","registerPooledStreamingEventProcessor","lambda$registerPooledStreamingEventProcessor$5","usingPooledStreamingEventProcessors","registerMessageMonitorFactory","byDefaultAssignHandlerTypesTo","lambda$registerSaga$0","lambda$byDefaultAssignTo$2","registerTrackingEventProcessor","assignHandlerInstancesMatching","byDefaultAssignHandlerInstancesTo","assignHandlerTypesMatching","registerSubscribingEventProcessor","lambda$registerMessageMonitor$4","lambda$registerTrackingEventProcessor$1","registerSaga","lambda$byDefaultAssignTo$3",18,1
"org.axonframework.config.Configuration",49,"lambda$findModules$0","lambda$eventProcessingConfiguration$3","getModules","lambda$aggregateConfiguration$6","findModules","getComponent","lambda$getComponent$8","lambda$findModules$1","lambda$aggregateConfiguration$5","lambda$eventProcessingConfiguration$4","lambda$aggregateConfiguration$7","eventBus","lambda$resourceInjector$2","aggregateConfiguration",15,1
"org.axonframework.config.Configuration",49,"eventSerializer","handlerDefinition","scopeAwareProvider","findModules","getComponent","parameterResolverFactory","queryBus","repository","upcasterChain","serializer","commandBus","eventStore","eventBus","spanFactory","messageMonitor","messageSerializer","correlationDataProviders","snapshotFilter",19,1
"org.axonframework.config.Configuration",49,"handlerDefinition","resourceInjector","parameterResolverFactory","eventProcessingConfiguration","spanFactory",5,1
"org.axonframework.config.Configuration",49,"handlerDefinition","getComponent","parameterResolverFactory","eventBus","spanFactory","messageMonitor","correlationDataProviders",7,1
"org.axonframework.config.Configuration",49,"handlerDefinition","getComponent","parameterResolverFactory","repository","commandBus","eventStore","eventBus","spanFactory",8,1
"org.axonframework.config.Configuration",49,"start",1,1
"org.axonframework.config.Configuration",49,"findModules","eventProcessingConfiguration",2,1
"org.axonframework.config.Configuration",49,"eventProcessingConfiguration",1,1
"org.axonframework.config.Configuration",49,"eventBus",1,1
"org.axonframework.test.aggregate.ResultValidator",47,"expectEvents",1,1
"org.axonframework.config.Configurer",42,"registerQueryHandler","eventProcessing","lambda$configureMessageMonitor$1","registerModule","buildConfiguration","lambda$configureMessageMonitor$0","registerComponent","configureAggregate","registerCommandHandler","configureMessageMonitor",11,1
"org.axonframework.config.Configurer",42,"configureEmbeddedEventStore","registerComponent",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getOrDefaultResource","afterCommit","parent","getOrComputeResource","resources","onCommit","onRollback","phase","root","onCleanup","getExecutionResult","onPrepareCommit","isRolledBack",13,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"lambda$attachTransaction$0","execute","lambda$execute$2","lambda$attachTransaction$1","rollback","parent","executeWithResult","resources","onCommit","onRollback","phase",11,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"commit","getCorrelationData",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"registerCorrelationDataProvider",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","phase","root",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","phase",3,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","parent","onRollback","onCleanup",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","attachTransaction","resources","onPrepareCommit",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","root",3,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","getOrComputeResource","onRollback","phase","root","onPrepareCommit",6,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","getExecutionResult",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","attachTransaction","getResource","resources","onPrepareCommit",5,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","executeWithResult","isRolledBack",3,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getOrComputeResource","getResource",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getOrComputeResource","root","onCleanup","onPrepareCommit",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"executeWithResult","attachTransaction",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","resources","onRollback","getExecutionResult","executeWithResult","onPrepareCommit",6,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","executeWithResult",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","onRollback","onCleanup","getExecutionResult","executeWithResult",5,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","onRollback","getExecutionResult","executeWithResult",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getResource",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getResource","resources",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getResource","resources","onCommit","onRollback","phase","root","onCleanup","getExecutionResult",8,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onCommit","onRollback",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"root","onCleanup",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onCleanup",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onCleanup","onPrepareCommit",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getExecutionResult",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"executeWithResult",1,1
"org.axonframework.eventhandling.tokenstore.TokenStore",26,"fetchSegments","fetchToken","releaseClaim","storeToken","lambda$fetchAvailableSegments$0",5,1
"org.axonframework.tracing.Span",26,"makeCurrent","start","recordException","runCallable","end",5,1
"org.axonframework.tracing.Span",26,"makeCurrent","start","wrapRunnable","recordException","end",5,1
"org.axonframework.tracing.Span",26,"makeCurrent","lambda$wrapCallable$2","lambda$wrapRunnable$1","start","lambda$wrapConsumer$4","run","lambda$wrapSupplier$3","runSupplier","recordException","runCallable","lambda$makeCurrent$0","end","runConsumer",13,1
"org.axonframework.tracing.Span",26,"runCallable",1,1
"org.axonframework.config.EventProcessingConfiguration",23,"eventProcessorByProcessingGroup","sagaProcessingGroup","sagaConfigurations","eventProcessors","eventProcessor","lambda$sagaConfiguration$0",6,1
"org.axonframework.config.EventProcessingConfiguration",23,"sagaEventProcessor","listenerInvocationErrorHandler","sagaProcessingGroup",3,1
"org.axonframework.config.EventProcessingConfiguration",23,"sagaStore",1,1
"org.axonframework.eventsourcing.eventstore.EventStorageEngine",21,"lastSequenceNumberFor","readEvents","storeSnapshot","createTokenAt","appendEvents","readSnapshot","createHeadToken","createTailToken",9,1
"org.axonframework.eventsourcing.eventstore.EventStorageEngine",21,"readEvents","appendEvents",3,1
"org.axonframework.messaging.deadletter.SequencedDeadLetterQueue",19,"enqueue","lambda$process$0","process","contains",4,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","hasNext",2,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","next","hasNext",3,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","hasNext","filter",3,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"next","lambda$of$0","of","lambda$of$1",6,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"getLastSequenceNumber","of","asStream",3,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"getLastSequenceNumber",1,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"concat","of",3,1
"org.axonframework.queryhandling.QueryResponseMessage",17,"withMetaData","andMetaData",2,1
"org.axonframework.eventhandling.EventTrackerStatus",16,"getError","isErrorState","getCurrentPosition","trackerRemoved","mergeCompletedPosition","trackerAdded","getTrackingToken","getSegment","getResetPosition","isCaughtUp","isReplaying","isMerging",12,1
"org.axonframework.eventhandling.EventTrackerStatus",16,"matchPositions","isErrorState","getCurrentPosition","mergeCompletedPosition","matchStates","isDifferent","getResetPosition","isCaughtUp","isReplaying","isMerging",10,1
"org.axonframework.eventhandling.EventTrackerStatus",16,"isCaughtUp","isReplaying",2,1
"org.axonframework.eventhandling.StreamingEventProcessor",16,"processingStatus","resetTokens","lambda$isReplaying$0",3,1
"org.axonframework.messaging.ResultMessage",16,"withMetaData","optionalExceptionResult","andMetaData","isExceptional","exceptionDetails",5,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"message","markTouched","cause","lastTouched","withCause",5,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"withDiagnostics",1,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"withDiagnostics","diagnostics",2,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"diagnostics",1,1
"org.axonframework.test.aggregate.TestExecutor",16,"whenTimeAdvancesTo","whenTimeElapses","whenThenTimeElapses","whenThenTimeAdvancesTo",4,1
"org.axonframework.queryhandling.QueryGateway",15,"subscriptionQuery","scatterGather","streamingQuery","query",8,1
"org.axonframework.queryhandling.QueryUpdateEmitter",15,"emit","lambda$completeExceptionally$2","lambda$emit$0","complete","lambda$complete$1","completeExceptionally",7,1
"org.axonframework.queryhandling.QueryUpdateEmitter",15,"registerUpdateHandler","queryUpdateHandlerRegistered",3,1
"org.axonframework.commandhandling.CommandResultMessage",14,"andMetaData","withMetaData",2,1
"org.axonframework.modelling.command.inspection.AggregateModel",14,"type","getVersion","declaredType",3,1
"org.axonframework.modelling.command.inspection.AggregateModel",14,"declaredType",1,1
"org.axonframework.modelling.command.inspection.AggregateModel",14,"types",1,1
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",14,"upcast","getData",2,1
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",14,"getMessageIdentifier","getAggregateIdentifier","getMetaData","getTrackingToken","getData","getSequenceNumber","getTimestamp","getAggregateType",8,1
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",14,"getType","getContentType","upcastPayload",3,1
"org.axonframework.eventhandling.DomainEventMessage",13,"withMetaData","andMetaData",2,1
"org.axonframework.eventhandling.EventMessage",13,"withMetaData","andMetaData",2,1
"org.axonframework.messaging.Message",13,"andMetaData","getPayload","getMetaData","withMetaData",4,1
"org.axonframework.messaging.Message",13,"serializePayload","getPayload","getIdentifier","getMetaData","serializeMetaData","getPayloadType",6,1
"org.axonframework.messaging.Message",13,"getIdentifier","getMetaData",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"annotationAttributes","attribute","hasAnnotation","priority","canHandleMessageType","canHandle","unwrap","handle","payloadType",9,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"annotationAttributes","attribute","hasAnnotation","priority","canHandleType","canHandleMessageType","canHandle","unwrap","handle","payloadType",10,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"annotationAttributes","unwrap",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"attribute",1,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"attribute","unwrap",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"attribute","priority","unwrap","payloadType",4,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"hasAnnotation",1,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"lambda$declaringClass$0","unwrap",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandleType","canHandleMessageType","canHandle","handle",4,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"unwrap","handle",2,1
"org.axonframework.deadline.DeadlineMessage",12,"andMetaData","withMetaData",2,1
"org.axonframework.eventhandling.WrappedToken",12,"advancedTo","lowerBound","upperBound","unwrap",4,1
"org.axonframework.eventhandling.WrappedToken",12,"unwrapLowerBound",1,1
"org.axonframework.eventhandling.WrappedToken",12,"advance",1,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"commandHandlers","routingKey","entityClass",3,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"commandHandlerInterceptors","commandHandlers","entityClass",3,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"commandHandlerInterceptors","commandHandlers","publish","entityClass",4,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"getIdentifier","modelOf",2,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"getIdentifier","routingKey",2,1
"org.axonframework.queryhandling.SubscriptionQueryMessage",12,"andMetaData","withMetaData",2,1
"org.axonframework.commandhandling.CommandMessage",11,"withMetaData",1,1
"org.axonframework.commandhandling.CommandMessage",11,"withMetaData","andMetaData",2,1
"org.axonframework.commandhandling.CommandMessage",11,"andMetaData",1,1
"org.axonframework.deadline.DeadlineManager",11,"schedule","cancelAllWithinScope",5,1
"org.axonframework.serialization.Serializer",11,"classForType",1,1
"org.axonframework.eventsourcing.snapshotting.SnapshotFilter",10,"lambda$combine$0","allow","lambda$allowAll$1","lambda$rejectAll$2",4,1
"org.axonframework.eventsourcing.snapshotting.SnapshotFilter",10,"allowAll","combine",2,1
"org.axonframework.messaging.StreamableMessageSource",10,"createHeadToken",1,1
"org.axonframework.messaging.StreamableMessageSource",10,"createTokenAt",1,1
"org.axonframework.modelling.saga.Saga",10,"prepareReset",1,1
"org.axonframework.modelling.saga.Saga",10,"getSagaIdentifier",1,1
"org.axonframework.modelling.saga.Saga",10,"getSagaIdentifier","getAssociationValues","isActive",3,1
"org.axonframework.queryhandling.QueryMessage",10,"queryName",1,1
"org.axonframework.queryhandling.QueryMessage",10,"getQueryName",1,1
"org.axonframework.queryhandling.QueryMessage",10,"getQueryName","withMetaData","andMetaData",3,1
"org.axonframework.common.caching.Cache",9,"computeIfPresent","put","remove","get","computeIfAbsent",5,1
"org.axonframework.common.caching.Cache",9,"put","remove","get",3,1
"org.axonframework.common.caching.Cache",9,"remove",1,1
"org.axonframework.lifecycle.Lifecycle$LifecycleRegistry",9,"onShutdown",1,1
"org.axonframework.lifecycle.Lifecycle$LifecycleRegistry",9,"onShutdown","onStart",2,1
"org.axonframework.lifecycle.Lifecycle$LifecycleRegistry",9,"onStart","lambda$onShutdown$1","onShutdown","lambda$onStart$0",4,1
"org.axonframework.modelling.command.Aggregate",9,"isDeleted","execute",2,1
"org.axonframework.modelling.command.Aggregate",9,"isDeleted","version","identifier","identifierAsString","rootType","handle",6,1
"org.axonframework.modelling.command.Aggregate",9,"version","identifierAsString",2,1
"org.axonframework.modelling.command.Aggregate",9,"version","handle",2,1
"org.axonframework.modelling.command.Aggregate",9,"identifier","handle",2,1
"org.axonframework.modelling.command.Aggregate",9,"identifier",1,1
"org.axonframework.modelling.command.Aggregate",9,"identifierAsString","handle",2,1
"org.axonframework.modelling.command.Repository",9,"load","loadOrCreate","newInstance",3,1
"org.axonframework.queryhandling.SubscriptionQueryResult",9,"updates","lambda$handle$1","lambda$handle$2","lambda$null$0","initialResult",5,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","propagateContext","createDispatchSpan",3,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","createChildHandlerSpan",2,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","propagateContext",3,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","propagateContext",2,1
"org.axonframework.tracing.SpanFactory",9,"createHandlerSpan",1,1
"org.axonframework.tracing.SpanFactory",9,"createRootTrace","createInternalSpan",2,1
"org.axonframework.tracing.SpanFactory",9,"propagateContext","createInternalSpan","createDispatchSpan",3,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","createDispatchSpan",2,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","createDispatchSpan","createLinkedHandlerSpan",3,1
"org.axonframework.common.stream.BlockingStream",8,"peek","skipMessagesWithPayloadTypeOf","hasNextAvailable","setOnAvailableCallback","nextAvailable",5,1
"org.axonframework.common.stream.BlockingStream",8,"peek","skipMessagesWithPayloadTypeOf","hasNextAvailable","nextAvailable",5,1
"org.axonframework.common.stream.BlockingStream",8,"peek","hasNextAvailable","close","nextAvailable",5,1
"org.axonframework.common.stream.BlockingStream",8,"hasNextAvailable",1,1
"org.axonframework.common.stream.BlockingStream",8,"hasNextAvailable","nextAvailable",2,1
"org.axonframework.common.stream.BlockingStream",8,"close",1,1
"org.axonframework.common.stream.BlockingStream",8,"nextAvailable",1,1
"org.axonframework.config.LifecycleOperations",8,"onShutdown","onStart",2,1
"org.axonframework.eventhandling.EventMessageHandler",8,"prepareReset","handle",2,1
"org.axonframework.eventhandling.EventMessageHandler",8,"handle",1,1
"org.axonframework.eventhandling.EventMessageHandler",8,"handle","supportsReset","prepareReset",3,1
"org.axonframework.eventhandling.TrackingToken",8,"lowerBound",1,1
"org.axonframework.eventhandling.TrackingToken",8,"covers","position",2,1
"org.axonframework.eventsourcing.eventstore.EventStore",8,"lambda$readEvents$0","readEvents",2,1
"org.axonframework.eventsourcing.eventstore.EventStore",8,"readEvents",1,1
"org.axonframework.modelling.saga.AssociationValues",8,"contains","asSet","removedAssociations","commit",4,1
"org.axonframework.modelling.saga.AssociationValues",8,"contains","add","remove",3,1
"org.axonframework.modelling.saga.AssociationValues",8,"addedAssociations","asSet","removedAssociations",3,1
"org.axonframework.modelling.saga.AssociationValues",8,"add",1,1
"org.axonframework.queryhandling.QueryBus",8,"query",1,1
"org.axonframework.queryhandling.QueryBus",8,"query","scatterGather","subscriptionQuery","streamingQuery",5,1
"org.axonframework.queryhandling.QueryBus",8,"subscribe",1,1
"org.axonframework.queryhandling.QueryBus",8,"subscriptionQuery",1,1
"org.axonframework.queryhandling.SubscriptionQueryUpdateMessage",8,"andMetaData","withMetaData",2,1
"org.axonframework.commandhandling.gateway.CommandGateway",7,"sendAndWait","send",3,1
"org.axonframework.eventhandling.DomainEventData",7,"getSequenceNumber",1,1
"org.axonframework.eventhandling.DomainEventData",7,"getType",1,1
"org.axonframework.eventhandling.EventProcessor",7,"shutDown",1,1
"org.axonframework.eventhandling.EventProcessor",7,"getHandlerInterceptors",1,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"convert","responseMessagePayloadType",2,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"getExpectedResponseType",1,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"getExpectedResponseType","convertExceptional","responseMessagePayloadType",3,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"responseMessagePayloadType",1,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"matchRank",1,1
"org.axonframework.queryhandling.StreamingQueryMessage",7,"withMetaData","andMetaData",2,1
"org.axonframework.eventhandling.EventHandlerInvoker",6,"handle","canHandleType","canHandle",3,1
"org.axonframework.eventhandling.EventHandlerInvoker",6,"performReset",1,1
"org.axonframework.eventhandling.scheduling.EventScheduler",6,"schedule","cancelSchedule",3,1
"org.axonframework.messaging.deadletter.EnqueueDecision",6,"shouldEnqueue","enqueueCause","withDiagnostics",3,1
"org.axonframework.modelling.saga.metamodel.SagaModel",6,"findHandlerMethods",1,1
"org.axonframework.monitoring.MessageMonitor$MonitorCallback",6,"reportFailure",1,1
"org.axonframework.config.EventProcessingConfigurer$DeadLetteringInvokerConfiguration",5,"lambda$andThen$0","lambda$noOp$1",2,1
"org.axonframework.config.EventProcessingConfigurer$DeadLetteringInvokerConfiguration",5,"noOp",1,1
"org.axonframework.config.EventProcessingConfigurer$PooledStreamingProcessorConfiguration",5,"lambda$noOp$1","lambda$andThen$0",2,1
"org.axonframework.config.EventProcessingConfigurer$PooledStreamingProcessorConfiguration",5,"noOp","andThen",2,1
"org.axonframework.config.EventProcessingConfigurer$PooledStreamingProcessorConfiguration",5,"noOp",1,1
"org.axonframework.messaging.HandlerAttributes",5,"get",1,1
"org.axonframework.messaging.HandlerAttributes",5,"getAll","isEmpty",2,1
"org.axonframework.config.AggregateConfiguration",4,"repository",1,1
"org.axonframework.eventhandling.EventTrackerStatusChangeListener",4,"lambda$noOp$0",1,1
"org.axonframework.eventhandling.EventTrackerStatusChangeListener",4,"noOp",1,1

"Source Cypher Query:","Candidates_for_Interface_Segregation.cypher"

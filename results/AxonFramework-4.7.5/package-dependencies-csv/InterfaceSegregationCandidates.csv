"dependentTypeFullQualifiedName","declaredMethods","calledMethodNames","calledMethods","callerTypes"
"org.axonframework.commandhandling.CommandMessage",11,"getCommandName",1,19
"org.axonframework.eventhandling.TrackedEventMessage",7,"trackingToken",1,14
"org.axonframework.eventhandling.DomainEventMessage",13,"getSequenceNumber",1,10
"org.axonframework.eventhandling.EventMessage",13,"getIdentifier",1,9
"org.axonframework.messaging.Message",13,"getPayload",1,9
"org.axonframework.eventhandling.DomainEventMessage",13,"getType","getSequenceNumber","getAggregateIdentifier",3,8
"org.axonframework.eventhandling.EventMessage",13,"getIdentifier","getTimestamp",2,8
"org.axonframework.serialization.Serializer",6,"serialize","deserialize",2,8
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage",1,7
"org.axonframework.messaging.ResultMessage",16,"exceptionResult","isExceptional",2,7
"org.axonframework.messaging.Message",13,"getMetaData",1,6
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"annotationAttributes",1,6
"org.axonframework.deadline.DeadlineMessage",12,"getDeadlineName",1,6
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan",1,6
"org.axonframework.serialization.Serializer",6,"serialize",1,6
"org.axonframework.eventhandling.DomainEventMessage",13,"getSequenceNumber","getAggregateIdentifier",2,5
"org.axonframework.messaging.Message",13,"getIdentifier",1,5
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"unwrap",1,5
"org.axonframework.serialization.Serializer",6,"deserialize",1,5
"org.axonframework.commandhandling.distributed.CommandMessageFilter",4,"matches",1,5
"org.axonframework.common.transaction.TransactionManager",4,"executeInTransaction",1,5
"org.axonframework.messaging.MessageDispatchInterceptor",4,"handle",1,5
"org.axonframework.monitoring.MessageMonitor",4,"onMessageIngested",1,5
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onPrepareCommit",1,4
"org.axonframework.eventhandling.DomainEventMessage",13,"getAggregateIdentifier",1,4
"org.axonframework.messaging.Message",13,"getPayload","getPayloadType",2,4
"org.axonframework.messaging.Message",13,"getPayloadType",1,4
"org.axonframework.messaging.Message",13,"withMetaData","andMetaData",2,4
"org.axonframework.modelling.command.Aggregate",9,"handle",1,4
"org.axonframework.tracing.SpanFactory",9,"createLinkedHandlerSpan",1,4
"org.axonframework.messaging.responsetypes.ResponseType",7,"matches",1,4
"org.axonframework.serialization.SerializedType",7,"getName","getRevision",2,4
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"execute","attachTransaction",2,3
"org.axonframework.tracing.Span",26,"runSupplier",1,3
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"of",1,3
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"asStream",1,3
"org.axonframework.eventhandling.DomainEventMessage",13,"getType",1,3
"org.axonframework.eventhandling.EventMessage",13,"getTimestamp",1,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle",1,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","unwrap",2,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","handle",2,3
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"payloadType","unwrap",2,3
"org.axonframework.modelling.command.inspection.AggregateModel",10,"type",1,3
"org.axonframework.modelling.saga.AssociationValues",8,"removedAssociations","addedAssociations",2,3
"org.axonframework.serialization.SerializedType",7,"getName",1,3
"org.axonframework.serialization.SerializedObject",6,"getData","getType",2,3
"org.axonframework.serialization.SerializedObject",6,"getData","getContentType",2,3
"org.axonframework.serialization.Serializer",6,"typeForClass","deserialize",2,3
"org.axonframework.common.transaction.TransactionManager",4,"startTransaction",1,3
"org.axonframework.messaging.MessageHandler",4,"getTargetType",1,3
"org.axonframework.config.Configuration",49,"getComponent",1,2
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","executeWithResult",2,2
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onRollback",1,2
"org.axonframework.eventsourcing.eventstore.EventStorageEngine",21,"readEvents",1,2
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","next","hasNext","getLastSequenceNumber",4,2
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek",1,2
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",14,"getMessageIdentifier","getSequenceNumber","getData","getAggregateIdentifier","getType","getMetaData","getTimestamp","getAggregateType","getTrackingToken",9,2
"org.axonframework.eventhandling.EventMessage",13,"andMetaData",1,2
"org.axonframework.eventhandling.EventMessage",13,"andMetaData","getIdentifier",2,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"signature","unwrap",2,2
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"handle",1,2
"org.axonframework.modelling.command.inspection.EntityModel",12,"modelOf",1,2
"org.axonframework.queryhandling.SubscriptionQueryMessage",12,"getUpdateResponseType",1,2
"org.axonframework.queryhandling.QueryMessage",10,"getQueryName","getResponseType",2,2
"org.axonframework.common.caching.Cache",9,"get","put",2,2
"org.axonframework.modelling.command.Aggregate",9,"identifierAsString",1,2
"org.axonframework.modelling.saga.AssociationValues",8,"asSet",1,2
"org.axonframework.eventhandling.DomainEventData",7,"getSequenceNumber","getAggregateIdentifier","getType",3,2
"org.axonframework.eventhandling.TrackedEventMessage",7,"trackingToken","withTrackingToken",2,2
"org.axonframework.serialization.SerializedType",7,"emptyType","getName",2,2
"org.axonframework.serialization.SerializedType",7,"getRevision",1,2
"org.axonframework.eventhandling.EventHandlerInvoker",6,"performReset","supportsReset",2,2
"org.axonframework.monitoring.MessageMonitor$MonitorCallback",6,"reportSuccess","reportFailure",2,2
"org.axonframework.monitoring.MessageMonitor$MonitorCallback",6,"reportSuccess","reportFailure","reportIgnored",3,2
"org.axonframework.serialization.SerializedObject",6,"getData","getType","getContentType",3,2
"org.axonframework.serialization.SerializedObject",6,"getType",1,2
"org.axonframework.serialization.Serializer",6,"getConverter",1,2
"org.axonframework.eventhandling.EventTrackerStatusChangeListener",4,"onEventTrackerStatusChange",1,2
"org.axonframework.messaging.MessageHandler",4,"handle",1,2
"org.axonframework.serialization.Converter",4,"convert",1,2
"org.axonframework.config.EventProcessingConfigurer",59,"usingPooledStreamingEventProcessors","registerSubscribingEventProcessor","registerSaga","byDefaultAssignHandlerTypesTo","lambda$registerTrackingEventProcessor$1","assignHandlerInstancesMatching","registerPooledStreamingEventProcessor","registerMessageMonitorFactory","byDefaultAssignHandlerInstancesTo","lambda$registerPooledStreamingEventProcessor$5","lambda$registerSaga$0","registerPooledStreamingEventProcessorConfiguration","registerTrackingEventProcessor","lambda$byDefaultAssignTo$3","lambda$byDefaultAssignTo$2","lambda$registerMessageMonitor$4","assignHandlerTypesMatching",18,1
"org.axonframework.config.Configuration",49,"getModules","eventBus","lambda$aggregateConfiguration$5","lambda$getComponent$8","lambda$aggregateConfiguration$7","lambda$findModules$0","lambda$findModules$1","getComponent","lambda$aggregateConfiguration$6","lambda$resourceInjector$2","lambda$eventProcessingConfiguration$3","findModules","aggregateConfiguration","lambda$eventProcessingConfiguration$4",15,1
"org.axonframework.config.Configuration",49,"upcasterChain","snapshotFilter","eventBus","messageMonitor","queryBus","getComponent","repository","spanFactory","findModules","commandBus","parameterResolverFactory","scopeAwareProvider","serializer","eventStore","messageSerializer","eventSerializer","handlerDefinition","correlationDataProviders",19,1
"org.axonframework.config.Configuration",49,"eventBus","messageMonitor","spanFactory","parameterResolverFactory","getComponent","handlerDefinition","correlationDataProviders",7,1
"org.axonframework.config.Configuration",49,"eventBus",1,1
"org.axonframework.config.Configuration",49,"eventBus","repository","spanFactory","commandBus","parameterResolverFactory","eventStore","getComponent","handlerDefinition",8,1
"org.axonframework.config.Configuration",49,"start",1,1
"org.axonframework.config.Configuration",49,"spanFactory","eventProcessingConfiguration","resourceInjector","parameterResolverFactory","handlerDefinition",5,1
"org.axonframework.config.Configuration",49,"eventProcessingConfiguration",1,1
"org.axonframework.config.Configuration",49,"eventProcessingConfiguration","findModules",2,1
"org.axonframework.test.aggregate.ResultValidator",47,"expectEvents",1,1
"org.axonframework.config.Configurer",42,"buildConfiguration","configureMessageMonitor","lambda$configureMessageMonitor$0","registerCommandHandler","eventProcessing","configureAggregate","registerQueryHandler","lambda$configureMessageMonitor$1","registerComponent","registerModule",11,1
"org.axonframework.config.Configurer",42,"configureEmbeddedEventStore","registerComponent",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","root","phase",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","phase",3,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","parent","onRollback","onCleanup",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","attachTransaction","resources","onPrepareCommit",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","root",3,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"afterCommit","getOrComputeResource","parent","isRolledBack","getOrDefaultResource","onRollback","resources","onCleanup","onCommit","root","phase","getExecutionResult","onPrepareCommit",13,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"lambda$attachTransaction$1","lambda$execute$2","rollback","lambda$attachTransaction$0","execute","parent","executeWithResult","onRollback","resources","onCommit","phase",11,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getCorrelationData","commit",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"registerCorrelationDataProvider",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getOrComputeResource","onCleanup","root","onPrepareCommit",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getOrComputeResource","getMessage","onRollback","root","phase","onPrepareCommit",6,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getOrComputeResource","getResource",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"isRolledBack","getMessage","executeWithResult",3,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","executeWithResult",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","getExecutionResult",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getMessage","attachTransaction","resources","getResource","onPrepareCommit",5,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","onRollback","resources","getExecutionResult","onPrepareCommit","executeWithResult",6,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","onRollback","onCleanup","getExecutionResult","executeWithResult",5,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"attachTransaction","onRollback","getExecutionResult","executeWithResult",4,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onRollback","onCommit",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onRollback","resources","onCleanup","onCommit","root","phase","getExecutionResult","getResource",8,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"resources","getResource",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onCleanup",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onCleanup","onPrepareCommit",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"onCleanup","root",2,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getExecutionResult",1,1
"org.axonframework.messaging.unitofwork.UnitOfWork",33,"getResource",1,1
"org.axonframework.eventhandling.tokenstore.TokenStore",26,"fetchSegments","releaseClaim","lambda$fetchAvailableSegments$0","storeToken","fetchToken",5,1
"org.axonframework.tracing.Span",26,"start","recordException","wrapRunnable","end","makeCurrent",5,1
"org.axonframework.tracing.Span",26,"start","runCallable","recordException","end","makeCurrent",5,1
"org.axonframework.tracing.Span",26,"start","runConsumer","lambda$wrapCallable$2","runSupplier","run","lambda$wrapSupplier$3","runCallable","recordException","lambda$makeCurrent$0","end","lambda$wrapConsumer$4","makeCurrent","lambda$wrapRunnable$1",13,1
"org.axonframework.tracing.Span",26,"runCallable",1,1
"org.axonframework.config.EventProcessingConfiguration",23,"sagaConfigurations","lambda$sagaConfiguration$0","eventProcessors","sagaProcessingGroup","eventProcessor","eventProcessorByProcessingGroup",6,1
"org.axonframework.config.EventProcessingConfiguration",23,"listenerInvocationErrorHandler","sagaEventProcessor","sagaProcessingGroup",3,1
"org.axonframework.config.EventProcessingConfiguration",23,"sagaStore",1,1
"org.axonframework.eventsourcing.eventstore.EventStorageEngine",21,"readEvents","createTailToken","lastSequenceNumberFor","createTokenAt","createHeadToken","appendEvents","readSnapshot","storeSnapshot",9,1
"org.axonframework.eventsourcing.eventstore.EventStorageEngine",21,"readEvents","appendEvents",3,1
"org.axonframework.messaging.deadletter.SequencedDeadLetterQueue",19,"contains","lambda$process$0","process","enqueue",4,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","hasNext",2,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","next","hasNext",3,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"peek","hasNext","filter",3,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"lambda$of$1","next","of","lambda$of$0",6,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"getLastSequenceNumber","of","asStream",3,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"getLastSequenceNumber",1,1
"org.axonframework.eventsourcing.eventstore.DomainEventStream",18,"concat","of",3,1
"org.axonframework.eventhandling.EventTrackerStatus",16,"trackerRemoved","isCaughtUp","getSegment","isErrorState","getResetPosition","isReplaying","trackerAdded","getCurrentPosition","isMerging","mergeCompletedPosition","getError","getTrackingToken",12,1
"org.axonframework.eventhandling.EventTrackerStatus",16,"isCaughtUp","isReplaying",2,1
"org.axonframework.eventhandling.EventTrackerStatus",16,"isCaughtUp","isErrorState","matchPositions","getResetPosition","isReplaying","getCurrentPosition","isMerging","mergeCompletedPosition","isDifferent","matchStates",10,1
"org.axonframework.eventhandling.StreamingEventProcessor",16,"resetTokens","lambda$isReplaying$0","processingStatus",3,1
"org.axonframework.messaging.ResultMessage",16,"isExceptional","optionalExceptionResult","exceptionDetails","andMetaData","withMetaData",5,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"cause","message","lastTouched","markTouched","withCause",5,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"diagnostics",1,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"diagnostics","withDiagnostics",2,1
"org.axonframework.messaging.deadletter.DeadLetter",16,"withDiagnostics",1,1
"org.axonframework.queryhandling.QueryResponseMessage",16,"andMetaData","withMetaData",2,1
"org.axonframework.test.aggregate.TestExecutor",16,"whenThenTimeAdvancesTo","whenTimeAdvancesTo","whenThenTimeElapses","whenTimeElapses",4,1
"org.axonframework.queryhandling.QueryGateway",15,"subscriptionQuery","query","scatterGather","streamingQuery",8,1
"org.axonframework.queryhandling.QueryUpdateEmitter",15,"queryUpdateHandlerRegistered","registerUpdateHandler",3,1
"org.axonframework.queryhandling.QueryUpdateEmitter",15,"complete","lambda$complete$1","lambda$completeExceptionally$2","lambda$emit$0","emit","completeExceptionally",7,1
"org.axonframework.commandhandling.CommandResultMessage",14,"andMetaData","withMetaData",2,1
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",14,"upcastPayload","getType","getContentType",3,1
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",14,"upcast","getData",2,1
"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",14,"getMessageIdentifier","getSequenceNumber","getData","getAggregateIdentifier","getMetaData","getTimestamp","getAggregateType","getTrackingToken",8,1
"org.axonframework.eventhandling.DomainEventMessage",13,"withMetaData","andMetaData",2,1
"org.axonframework.eventhandling.EventMessage",13,"withMetaData","andMetaData",2,1
"org.axonframework.messaging.Message",13,"getMetaData","getPayload","getPayloadType",3,1
"org.axonframework.messaging.Message",13,"getMetaData","getPayload","withMetaData","andMetaData",4,1
"org.axonframework.messaging.Message",13,"getMetaData","getIdentifier",2,1
"org.axonframework.messaging.Message",13,"getMetaData","getPayload","getPayloadType","getIdentifier",4,1
"org.axonframework.messaging.Message",13,"getMetaData","getPayload",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","priority","attribute","hasAnnotation","canHandleMessageType","payloadType","unwrap","handle","annotationAttributes",9,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","priority","attribute","hasAnnotation","canHandleMessageType","canHandleType","payloadType","unwrap","handle","annotationAttributes",10,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","canHandleMessageType","canHandleType","handle",4,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"canHandle","unwrap","handle",3,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"priority","attribute","payloadType","unwrap",4,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"attribute",1,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"attribute","unwrap",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"lambda$declaringClass$0","unwrap",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"hasAnnotation",1,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"unwrap","handle",2,1
"org.axonframework.messaging.annotation.MessageHandlingMember",13,"unwrap","annotationAttributes",2,1
"org.axonframework.deadline.DeadlineMessage",12,"andMetaData","withMetaData",2,1
"org.axonframework.eventhandling.WrappedToken",12,"advancedTo","unwrap","lowerBound","upperBound",4,1
"org.axonframework.eventhandling.WrappedToken",12,"unwrapLowerBound",1,1
"org.axonframework.eventhandling.WrappedToken",12,"advance",1,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"modelOf","getIdentifier",2,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"commandHandlers","commandHandlerInterceptors","entityClass",3,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"commandHandlers","commandHandlerInterceptors","publish","entityClass",4,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"routingKey","entityClass","commandHandlers",3,1
"org.axonframework.modelling.command.inspection.EntityModel",12,"routingKey","getIdentifier",2,1
"org.axonframework.queryhandling.SubscriptionQueryMessage",12,"andMetaData","withMetaData",2,1
"org.axonframework.commandhandling.CommandMessage",11,"withMetaData",1,1
"org.axonframework.commandhandling.CommandMessage",11,"withMetaData","andMetaData",2,1
"org.axonframework.commandhandling.CommandMessage",11,"andMetaData",1,1
"org.axonframework.deadline.DeadlineManager",11,"schedule","cancelAllWithinScope",5,1
"org.axonframework.eventsourcing.snapshotting.SnapshotFilter",10,"combine","allowAll",2,1
"org.axonframework.eventsourcing.snapshotting.SnapshotFilter",10,"lambda$allowAll$1","allow","lambda$combine$0","lambda$rejectAll$2",4,1
"org.axonframework.messaging.StreamableMessageSource",10,"createHeadToken",1,1
"org.axonframework.messaging.StreamableMessageSource",10,"createTokenAt",1,1
"org.axonframework.modelling.command.inspection.AggregateModel",10,"types",1,1
"org.axonframework.modelling.command.inspection.AggregateModel",10,"types","type",2,1
"org.axonframework.modelling.command.inspection.AggregateModel",10,"declaredType",1,1
"org.axonframework.modelling.saga.Saga",10,"prepareReset",1,1
"org.axonframework.modelling.saga.Saga",10,"getAssociationValues","isActive","getSagaIdentifier",3,1
"org.axonframework.modelling.saga.Saga",10,"getSagaIdentifier",1,1
"org.axonframework.queryhandling.QueryMessage",10,"getQueryName",1,1
"org.axonframework.queryhandling.QueryMessage",10,"getQueryName","withMetaData","andMetaData",3,1
"org.axonframework.queryhandling.QueryMessage",10,"queryName",1,1
"org.axonframework.common.caching.Cache",9,"computeIfAbsent","get","put","remove","computeIfPresent",5,1
"org.axonframework.common.caching.Cache",9,"get","put","remove",3,1
"org.axonframework.common.caching.Cache",9,"remove",1,1
"org.axonframework.lifecycle.Lifecycle$LifecycleRegistry",9,"onStart","lambda$onShutdown$1","lambda$onStart$0","onShutdown",4,1
"org.axonframework.lifecycle.Lifecycle$LifecycleRegistry",9,"onStart","onShutdown",2,1
"org.axonframework.lifecycle.Lifecycle$LifecycleRegistry",9,"onShutdown",1,1
"org.axonframework.modelling.command.Aggregate",9,"execute","isDeleted",2,1
"org.axonframework.modelling.command.Aggregate",9,"version","identifierAsString",2,1
"org.axonframework.modelling.command.Aggregate",9,"version","handle",2,1
"org.axonframework.modelling.command.Aggregate",9,"version","identifier","identifierAsString","rootType","isDeleted","handle",6,1
"org.axonframework.modelling.command.Aggregate",9,"identifier","handle",2,1
"org.axonframework.modelling.command.Aggregate",9,"identifier",1,1
"org.axonframework.modelling.command.Aggregate",9,"identifierAsString","handle",2,1
"org.axonframework.modelling.command.Repository",9,"load","loadOrCreate","newInstance",3,1
"org.axonframework.modelling.command.Repository",9,"newInstance",1,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","propagateContext","createDispatchSpan",3,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","createChildHandlerSpan",3,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","propagateContext",3,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","propagateContext",2,1
"org.axonframework.tracing.SpanFactory",9,"createHandlerSpan",1,1
"org.axonframework.tracing.SpanFactory",9,"createRootTrace","createInternalSpan",2,1
"org.axonframework.tracing.SpanFactory",9,"propagateContext","createInternalSpan","createDispatchSpan",3,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","createDispatchSpan",2,1
"org.axonframework.tracing.SpanFactory",9,"createInternalSpan","createDispatchSpan","createLinkedHandlerSpan",3,1
"org.axonframework.common.stream.BlockingStream",8,"hasNextAvailable","close","nextAvailable","peek",5,1
"org.axonframework.common.stream.BlockingStream",8,"hasNextAvailable","nextAvailable","skipMessagesWithPayloadTypeOf","peek",5,1
"org.axonframework.common.stream.BlockingStream",8,"hasNextAvailable",1,1
"org.axonframework.common.stream.BlockingStream",8,"setOnAvailableCallback","nextAvailable","skipMessagesWithPayloadTypeOf","peek","hasNextAvailable",5,1
"org.axonframework.common.stream.BlockingStream",8,"close",1,1
"org.axonframework.common.stream.BlockingStream",8,"nextAvailable","hasNextAvailable",2,1
"org.axonframework.common.stream.BlockingStream",8,"nextAvailable",1,1
"org.axonframework.config.LifecycleOperations",8,"onStart","onShutdown",2,1
"org.axonframework.eventhandling.EventMessageHandler",8,"prepareReset","handle",2,1
"org.axonframework.eventhandling.EventMessageHandler",8,"handle",1,1
"org.axonframework.eventhandling.EventMessageHandler",8,"handle","prepareReset","supportsReset",3,1
"org.axonframework.eventhandling.TrackingToken",8,"lowerBound",1,1
"org.axonframework.eventhandling.TrackingToken",8,"covers","position",2,1
"org.axonframework.eventsourcing.eventstore.EventStore",8,"lambda$readEvents$0","readEvents",2,1
"org.axonframework.eventsourcing.eventstore.EventStore",8,"readEvents",1,1
"org.axonframework.modelling.saga.AssociationValues",8,"removedAssociations","contains","asSet","commit",4,1
"org.axonframework.modelling.saga.AssociationValues",8,"removedAssociations","asSet","addedAssociations",3,1
"org.axonframework.modelling.saga.AssociationValues",8,"remove","contains","add",3,1
"org.axonframework.modelling.saga.AssociationValues",8,"add",1,1
"org.axonframework.queryhandling.QueryBus",8,"scatterGather","subscriptionQuery","query",4,1
"org.axonframework.queryhandling.QueryBus",8,"query",1,1
"org.axonframework.queryhandling.QueryBus",8,"subscriptionQuery",1,1
"org.axonframework.queryhandling.QueryBus",8,"subscribe",1,1
"org.axonframework.commandhandling.gateway.CommandGateway",7,"sendAndWait","send",3,1
"org.axonframework.eventhandling.DomainEventData",7,"getSequenceNumber",1,1
"org.axonframework.eventhandling.DomainEventData",7,"getType",1,1
"org.axonframework.eventhandling.EventProcessor",7,"getHandlerInterceptors",1,1
"org.axonframework.eventhandling.EventProcessor",7,"shutDown",1,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"responseMessagePayloadType","convert",2,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"matchRank",1,1
"org.axonframework.messaging.responsetypes.ResponseType",7,"getExpectedResponseType",1,1
"org.axonframework.queryhandling.StreamingQueryMessage",7,"andMetaData","withMetaData",2,1
"org.axonframework.queryhandling.StreamingQueryMessage",7,"getResponseType",1,1
"org.axonframework.queryhandling.SubscriptionQueryUpdateMessage",7,"withMetaData","andMetaData",2,1
"org.axonframework.eventhandling.EventHandlerInvoker",6,"canHandleType","handle","canHandle",3,1
"org.axonframework.eventhandling.EventHandlerInvoker",6,"performReset",1,1
"org.axonframework.eventhandling.scheduling.EventScheduler",6,"schedule","cancelSchedule",3,1
"org.axonframework.messaging.deadletter.EnqueueDecision",6,"enqueueCause","withDiagnostics","shouldEnqueue",3,1
"org.axonframework.modelling.saga.metamodel.SagaModel",6,"findHandlerMethods",1,1
"org.axonframework.monitoring.MessageMonitor$MonitorCallback",6,"reportFailure",1,1
"org.axonframework.serialization.SerializedObject",6,"getType","getContentType",2,1
"org.axonframework.serialization.SerializedObject",6,"getContentType",1,1
"org.axonframework.serialization.Serializer",6,"serialize","getConverter","typeForClass",3,1
"org.axonframework.serialization.Serializer",6,"classForType",1,1
"org.axonframework.serialization.Serializer",6,"classForType","deserialize",2,1
"org.axonframework.config.EventProcessingConfigurer$DeadLetteringInvokerConfiguration",5,"lambda$andThen$0","lambda$noOp$1",2,1
"org.axonframework.config.EventProcessingConfigurer$DeadLetteringInvokerConfiguration",5,"noOp",1,1
"org.axonframework.config.EventProcessingConfigurer$PooledStreamingProcessorConfiguration",5,"lambda$noOp$1","lambda$andThen$0",2,1
"org.axonframework.config.EventProcessingConfigurer$PooledStreamingProcessorConfiguration",5,"andThen","noOp",2,1
"org.axonframework.config.EventProcessingConfigurer$PooledStreamingProcessorConfiguration",5,"noOp",1,1
"org.axonframework.messaging.HandlerAttributes",5,"isEmpty","getAll",2,1
"org.axonframework.messaging.HandlerAttributes",5,"get",1,1
"org.axonframework.config.AggregateConfiguration",4,"repository",1,1
"org.axonframework.eventhandling.EventTrackerStatusChangeListener",4,"lambda$noOp$0",1,1
"org.axonframework.eventhandling.EventTrackerStatusChangeListener",4,"noOp",1,1
"org.axonframework.eventsourcing.SnapshotTriggerDefinition",4,"prepareTrigger",1,1

"Source Cypher Query:","Candidates_for_Interface_Segregation.cypher"

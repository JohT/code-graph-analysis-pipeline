"fullDependentTypeName","declaredMethods","calledMethodNames","calledMethods","callerTypes","Source Cypher File: Internal_Dependencies/Candidates_for_Interface_Segregation.cypher"
"org.axonframework.commandhandling.CommandMessage",9,"getCommandName",1,20,""
"org.axonframework.eventhandling.EventMessage",9,"getTimestamp,getIdentifier",2,11,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getSequenceNumber",1,9,""
"org.axonframework.eventhandling.EventMessage",9,"getIdentifier",1,9,""
"org.axonframework.eventhandling.TrackedEventMessage",10,"trackingToken",1,8,""
"org.axonframework.commandhandling.GenericCommandResultMessage",14,"asCommandResultMessage",1,6,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getAggregateIdentifier,getType,getSequenceNumber",3,6,""
"org.axonframework.messaging.ResultMessage",9,"exceptionResult,isExceptional",2,6,""
"org.axonframework.eventhandling.ReplayToken",13,"createReplayToken",1,5,""
"org.axonframework.deadline.GenericDeadlineMessage",11,"asDeadlineMessage",1,5,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getAggregateIdentifier",1,5,""
"org.axonframework.eventhandling.TrackedEventMessage",12,"trackingToken",1,4,""
"org.axonframework.deadline.DeadlineMessage",10,"getDeadlineName",1,4,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getType",1,4,""
"org.axonframework.eventhandling.GenericEventMessage",10,"asEventMessage",1,4,""
"org.axonframework.eventhandling.EventMessage",9,"getTimestamp",1,4,""
"org.axonframework.deadline.DefaultDeadlineManagerSpanFactory",8,"builder",1,4,""
"org.axonframework.common.transaction.NoTransactionManager",4,"instance",1,4,""
"org.axonframework.queryhandling.SimpleQueryUpdateEmitter",17,"builder",1,3,""
"org.axonframework.commandhandling.GenericCommandResultMessage",15,"asCommandResultMessage",1,3,""
"org.axonframework.eventhandling.ReplayToken",13,"isReplay",1,3,""
"org.axonframework.modelling.command.inspection.AggregateModel",13,"type",1,3,""
"org.axonframework.queryhandling.SubscriptionQueryMessage",12,"getUpdateResponseType",1,3,""
"org.axonframework.eventhandling.DomainEventMessage",11,"getAggregateIdentifier,getType,getSequenceNumber",3,3,""
"org.axonframework.eventhandling.GenericEventMessage",11,"asEventMessage",1,3,""
"org.axonframework.queryhandling.SimpleQueryBus",11,"builder",1,3,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getAggregateIdentifier,getSequenceNumber",2,3,""
"org.axonframework.eventhandling.GapAwareTrackingToken",10,"getGaps,newInstance,withGapsTruncatedAt,getIndex,advanceTo",5,3,""
"org.axonframework.queryhandling.DefaultQueryBusSpanFactory",10,"builder",1,3,""
"org.axonframework.commandhandling.gateway.DefaultCommandGateway",9,"builder",1,3,""
"org.axonframework.config.Configuration",9,"upcasterChain,snapshotFilter",2,3,""
"org.axonframework.config.Configuration",9,"getComponent",1,3,""
"org.axonframework.messaging.MessageDecorator",9,"describeTo",1,3,""
"org.axonframework.queryhandling.QueryMessage",9,"getResponseType,getQueryName",2,3,""
"org.axonframework.commandhandling.DefaultCommandBusSpanFactory",5,"builder",1,3,""
"org.axonframework.eventhandling.TrackedEventData",5,"trackingToken",1,3,""
"org.axonframework.eventhandling.tokenstore.ConfigToken",5,"get",1,3,""
"org.axonframework.serialization.SimpleSerializedType",5,"emptyType",1,3,""
"org.axonframework.eventhandling.DefaultEventBusSpanFactory",4,"builder",1,3,""
"org.axonframework.queryhandling.DefaultQueryUpdateEmitterSpanFactory",4,"builder",1,3,""
"org.axonframework.modelling.command.inspection.AnnotatedAggregate",17,"initialize,getAggregateRoot,initSequence",4,2,""
"org.axonframework.queryhandling.DefaultQueryGateway",17,"builder",1,2,""
"org.axonframework.eventhandling.tokenstore.jpa.JpaTokenStore",15,"builder",1,2,""
"org.axonframework.commandhandling.CommandMessageHandlingMember",14,"commandName,isFactoryHandler",2,2,""
"org.axonframework.commandhandling.GenericCommandResultMessage",14,"asCommandResultMessage",2,2,""
"org.axonframework.deadline.DeadlineMessage",14,"getDeadlineName",1,2,""
"org.axonframework.messaging.GenericResultMessage",14,"asResultMessage",1,2,""
"org.axonframework.messaging.annotation.WrappedMessageHandlingMember",14,"handle",1,2,""
"org.axonframework.axonserver.connector.query.AxonServerQueryBus",13,"builder",1,2,""
"org.axonframework.eventhandling.DomainEventMessage",13,"getAggregateIdentifier,getSequenceNumber",2,2,""
"org.axonframework.modelling.command.inspection.AggregateModel",13,"types",1,2,""
"org.axonframework.queryhandling.StreamingQueryMessage",12,"getResponseType",1,2,""
"org.axonframework.commandhandling.GenericCommandMessage",11,"asCommandMessage",1,2,""
"org.axonframework.eventhandling.DomainEventMessage",11,"getSequenceNumber",1,2,""
"org.axonframework.eventhandling.TrackedEventMessage",11,"trackingToken",1,2,""
"org.axonframework.eventhandling.TrackedEventMessage",11,"trackingToken,withTrackingToken",2,2,""
"org.axonframework.queryhandling.DefaultQueryBusSpanFactory",11,"builder",1,2,""
"org.axonframework.eventhandling.GenericEventMessage",10,"describeTo",1,2,""
"org.axonframework.messaging.ResultMessage",10,"exceptionResult,isExceptional",2,2,""
"org.axonframework.config.Configurer",9,"eventProcessing",1,2,""
"org.axonframework.eventhandling.EventMessage",9,"andMetaData",1,2,""
"org.axonframework.modelling.saga.Saga",9,"getSagaIdentifier",1,2,""
"org.axonframework.queryhandling.QueryMessage",9,"getQueryName",1,2,""
"org.axonframework.deadline.DefaultDeadlineManagerSpanFactory",7,"builder",1,2,""
"org.axonframework.commandhandling.AnnotationCommandHandlerAdapter",6,"subscribe",1,2,""
"org.axonframework.commandhandling.SimpleCommandBus",6,"builder",1,2,""
"org.axonframework.modelling.saga.repository.jpa.JpaSagaStore",6,"builder",1,2,""
"org.axonframework.eventhandling.DomainEventData",5,"getSequenceNumber",1,2,""
"org.axonframework.messaging.annotation.InterceptorChainParameterResolverFactory",5,"currentInterceptorChain",1,2,""
"org.axonframework.messaging.annotation.InterceptorChainParameterResolverFactory",5,"callWithInterceptorChain",1,2,""
"org.axonframework.serialization.ChainingConverter",5,"registerConverter",1,2,""
"org.axonframework.commandhandling.DefaultCommandBusSpanFactory",4,"builder",1,2,""
"org.axonframework.eventhandling.gateway.DefaultEventGateway",4,"builder",1,2,""
"org.axonframework.modelling.command.DefaultRepositorySpanFactory",4,"builder",1,2,""
"org.axonframework.serialization.SimpleSerializedObject",4,"getType",1,2,""
"org.axonframework.config.DefaultConfigurer",66,"access$900,invokeStartHandlers,defaultComponent,access$1500,access$800,access$200,access$700,invokeShutdownHandlers,access$1200,access$1400,access$600,access$1000,access$1100,access$400,access$300,access$1300,access$500",17,1,""
"org.axonframework.test.saga.FixtureExecutionResultImpl",56,"startRecording,registerStartRecordingCallback",2,1,""
"org.axonframework.test.aggregate.ResultValidatorImpl",53,"assertValidRecording,recordException",2,1,""
"org.axonframework.config.DefaultConfigurer",51,"registerModule",1,1,""
"org.axonframework.test.saga.SagaTestFixture",37,"access$300,currentTime,handleInSaga",3,1,""
"org.axonframework.config.Configuration",34,"eventBus,findModules,upcasterChain,messageSerializer,correlationDataProviders,serializer,handlerDefinition,spanFactory,getComponent,messageMonitor,repository,snapshotFilter,scopeAwareProvider,commandBus,eventSerializer,queryBus,parameterResolverFactory,eventStore",19,1,""
"org.axonframework.messaging.unitofwork.AbstractUnitOfWork",34,"rollback",1,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",32,"getState,access$1100,access$1400,access$1200,doSleepFor,access$2000,access$2400,access$1000,access$900,access$1900,access$1500,access$1600,access$800,access$1700,access$1800,access$2200,access$700,access$2300,access$1300,access$600",20,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",29,"getState,access$1100,access$1400,access$1200,processingLoop,access$1000,access$900,access$1500,access$800,access$1300",10,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",28,"access$700,access$600",2,1,""
"org.axonframework.config.Configuration",27,"eventBus,correlationDataProviders,handlerDefinition,getComponent,messageMonitor,parameterResolverFactory",7,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",27,"builder",1,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",27,"releaseSegment,access$1000,access$1600,access$800,access$2200",5,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",27,"access$2500,access$800,access$2200,access$1300",4,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",27,"access$1000,access$1600,access$800,access$2200",4,1,""
"org.axonframework.eventhandling.pooled.PooledStreamingEventProcessor",27,"builder",1,1,""
"org.axonframework.eventhandling.TrackerStatus",24,"caughtUp,getSegment,unmarkError,isErrorState,isCaughtUp,markError,advancedTo",7,1,""
"org.axonframework.eventhandling.TrackerStatus",19,"isErrorState,markError,advancedTo",3,1,""
"org.axonframework.modelling.saga.AnnotatedSaga",19,"root,getAssociationValues,isActive,getSagaIdentifier",4,1,""
"org.axonframework.test.deadline.StubDeadlineManager",19,"getScheduledDeadlines,getCurrentDateTime,getTriggeredDeadlines",3,1,""
"org.axonframework.modelling.command.inspection.AnnotatedAggregateMetaModelFactory$AnnotatedAggregateModel",18,"access$000,access$100",2,1,""
"org.axonframework.axonserver.connector.query.GrpcBackedQueryMessage",17,"getResponseType,getPayloadType,getQueryName,getMetaData,withMetaData,getPayload",6,1,""
"org.axonframework.eventhandling.TrackerStatus",17,"split,getSegment,getTrackingToken",3,1,""
"org.axonframework.eventhandling.TrackerStatus",17,"caughtUp",1,1,""
"org.axonframework.eventhandling.TrackerStatus",17,"getInternalTrackingToken,getSegment",2,1,""
"org.axonframework.eventhandling.TrackerStatus",17,"getSegment,getTrackingToken,split",3,1,""
"org.axonframework.eventhandling.TrackerStatus",17,"getSegment",1,1,""
"org.axonframework.eventsourcing.eventstore.AbstractEventStore",17,"handleSnapshotReadingError,readEvents,storageEngine",3,1,""
"org.axonframework.modelling.command.inspection.ForwardingCommandMessageHandlingMember",17,"canForward",1,1,""
"org.axonframework.commandhandling.GenericCommandResultMessage",16,"asCommandResultMessage",2,1,""
"org.axonframework.config.Configuration",16,"eventBus,handlerDefinition,getComponent,repository,commandBus,parameterResolverFactory,eventStore",8,1,""
"org.axonframework.eventhandling.MergedTrackingToken",16,"lowerSegmentToken,mergePosition,isMergeInProgress,position,upperSegmentToken",5,1,""
"org.axonframework.eventhandling.ReplayToken",16,"lowerBound,isReplay,getTokenAtReset,createReplayToken,position",6,1,""
"org.axonframework.eventhandling.deadletter.jdbc.JdbcDeadLetter",16,"getSequenceIndex,getIdentifier,getSequenceIdentifier",3,1,""
"org.axonframework.eventhandling.deadletter.jdbc.JdbcSequencedDeadLetterQueue",16,"deadLetterSequence",1,1,""
"org.axonframework.eventhandling.deadletter.jdbc.JdbcSequencedDeadLetterQueue",16,"builder",1,1,""
"org.axonframework.eventhandling.deadletter.jpa.JpaSequencedDeadLetterQueue",16,"deadLetterSequence",1,1,""
"org.axonframework.eventhandling.deadletter.jpa.JpaSequencedDeadLetterQueue",16,"builder",1,1,""
"org.axonframework.eventhandling.deadletter.legacyjpa.JpaSequencedDeadLetterQueue",16,"builder",1,1,""
"org.axonframework.eventhandling.deadletter.legacyjpa.JpaSequencedDeadLetterQueue",16,"deadLetterSequence",1,1,""
"org.axonframework.modelling.command.inspection.AnnotatedAggregate",16,"publishOnEventBus,publish,doApply",3,1,""
"org.axonframework.queryhandling.GenericQueryResponseMessage",16,"asResponseMessage,asNullableResponseMessage",2,1,""
"org.axonframework.axonserver.connector.query.AxonServerQueryBus",15,"access$1400,access$1500,access$1100,access$1700,access$1000,access$1600,access$1300,access$1200",8,1,""
"org.axonframework.commandhandling.CommandMessageHandlingMember",15,"commandName,routingKey",2,1,""
"org.axonframework.commandhandling.CommandMessageHandlingMember",15,"commandName,isFactoryHandler",2,1,""
"org.axonframework.commandhandling.GenericCommandResultMessage",15,"asCommandResultMessage",2,1,""
"org.axonframework.config.Configuration",15,"correlationDataProviders,getComponent,messageMonitor,repository,eventStore",6,1,""
"org.axonframework.eventhandling.MultiStreamableMessageSource$SourceIdAwareBlockingStream",15,"hasNextAvailable,setOnAvailableCallback,access$300,close,skipMessagesWithPayloadTypeOf,peek",7,1,""
"org.axonframework.eventhandling.deadletter.jdbc.DefaultDeadLetterStatementFactory",15,"builder",1,1,""
"org.axonframework.eventhandling.deadletter.jpa.JpaDeadLetter",15,"getSequenceIdentifier,getId,getIndex",3,1,""
"org.axonframework.eventhandling.deadletter.legacyjpa.JpaDeadLetter",15,"getId,getIndex,getSequenceIdentifier",3,1,""
"org.axonframework.eventhandling.tokenstore.jdbc.JdbcTokenStore",15,"builder",1,1,""
"org.axonframework.eventhandling.tokenstore.legacyjpa.JpaTokenStore",15,"builder",1,1,""
"org.axonframework.messaging.annotation.WrappedMessageHandlingMember",15,"handle,canHandle",2,1,""
"org.axonframework.modelling.command.inspection.AggregateModel",15,"type,declaredType,getVersion",3,1,""
"org.axonframework.modelling.command.inspection.AnnotatedAggregate",15,"initialize,identifier,version,isDeleted",4,1,""
"org.axonframework.modelling.saga.repository.jdbc.GenericSagaSqlSchema",15,"sql_loadSaga",1,1,""
"org.axonframework.queryhandling.GenericSubscriptionQueryUpdateMessage",15,"asUpdateMessage",1,1,""
"org.axonframework.serialization.upcasting.event.InitialEventRepresentation",15,"getSequenceNumber",1,1,""
"org.axonframework.test.aggregate.AggregateTestFixture$IdentifierValidatingRepository",15,"getAggregate,access$500,access$200,load,newInstance,access$300,send",7,1,""
"org.axonframework.axonserver.connector.query.AxonServerQueryBus",14,"access$1400,access$1500",2,1,""
"org.axonframework.messaging.GenericResultMessage",14,"asResultMessage",2,1,""
"org.axonframework.messaging.annotation.WrappedMessageHandlingMember",14,"canHandle",1,1,""
"org.axonframework.messaging.responsetypes.ConvertingResponseMessage",14,"getPayload",1,1,""
"org.axonframework.modelling.command.inspection.AggregateModel",14,"type,types",2,1,""
"org.axonframework.queryhandling.GenericQueryResponseMessage",14,"asResponseMessage",1,1,""
"org.axonframework.queryhandling.QueryMessage",14,"queryName",1,1,""
"org.axonframework.queryhandling.QueryMessage",14,"getResponseType,getQueryName",2,1,""
"org.axonframework.queryhandling.annotation.QueryHandlingMember",14,"getQueryName,getResultType",2,1,""
"org.axonframework.config.Configuration",13,"upcasterChain,messageSerializer,serializer,getComponent,messageMonitor,queryUpdateEmitter,snapshotFilter,eventSerializer",9,1,""
"org.axonframework.config.Configuration",13,"handlerDefinition,eventProcessingConfiguration,getComponent,resourceInjector,parameterResolverFactory",5,1,""
"org.axonframework.eventhandling.EventMessage",13,"getIdentifier",1,1,""
"org.axonframework.eventhandling.GenericDomainEventMessage",13,"getAggregateIdentifier,getType,getSequenceNumber",3,1,""
"org.axonframework.eventhandling.GenericDomainEventMessage",13,"andMetaData",1,1,""
"org.axonframework.eventhandling.GenericDomainEventMessage",13,"describeTo",1,1,""
"org.axonframework.eventhandling.MergedTrackingToken",13,"merged",1,1,""
"org.axonframework.eventhandling.MergedTrackingToken",13,"isUpperSegmentAdvanced,lowerSegmentToken,isLowerSegmentAdvanced,upperSegmentToken",4,1,""
"org.axonframework.eventhandling.ReplayToken",13,"replayContext",1,1,""
"org.axonframework.eventhandling.TrackedEventMessage",13,"trackingToken",1,1,""
"org.axonframework.modelling.command.inspection.AggregateModel",13,"declaredType",1,1,""
"org.axonframework.queryhandling.SubscriptionQueryMessage",13,"getUpdateResponseType",1,1,""
"org.axonframework.tracing.LoggingSpanFactory",13,"access$100",1,1,""
"org.axonframework.axonserver.connector.AxonServerConnectionManager",12,"getConnection",1,1,""
"org.axonframework.commandhandling.GenericCommandMessage",12,"asCommandMessage",1,1,""
"org.axonframework.config.Configuration",12,"eventProcessingConfiguration,getComponent",2,1,""
"org.axonframework.eventhandling.GenericEventMessage",12,"asEventMessage",1,1,""
"org.axonframework.eventhandling.SimpleEventHandlerInvoker",12,"eventHandlers,invokeHandlers,performReset,sequenceIdentifier,sequencingPolicyMatchesSegment",5,1,""
"org.axonframework.eventsourcing.eventstore.AbstractEventStorageEngine",12,"getEventSerializer,getSnapshotSerializer",2,1,""
"org.axonframework.modelling.command.LockAwareAggregate",12,"version,isLockHeld,getWrappedAggregate",3,1,""
"org.axonframework.test.eventscheduler.StubEventScheduler",12,"advanceTimeBy,initializeAt,advanceTimeTo,getCurrentDateTime",4,1,""
"org.axonframework.commandhandling.CommandMessage",11,"andMetaData",1,1,""
"org.axonframework.commandhandling.CommandMessage",11,"getCommandName",1,1,""
"org.axonframework.commandhandling.SimpleCommandBus",11,"builder,registerHandlerInterceptor,subscribe,registerDispatchInterceptor,dispatch",5,1,""
"org.axonframework.config.AggregateConfigurer",11,"defaultConfiguration",1,1,""
"org.axonframework.config.Configuration",11,"eventBus",1,1,""
"org.axonframework.config.Configuration",11,"upcasterChain,correlationDataProviders,messageMonitor,snapshotFilter,getComponent",5,1,""
"org.axonframework.config.Configurer",11,"configureCorrelationDataProviders,registerEventUpcaster,onInitialize",3,1,""
"org.axonframework.disruptor.commandhandling.CommandHandlerInvoker$DisruptorRepository",11,"load,loadOrCreate,newInstance",4,1,""
"org.axonframework.eventhandling.EventMessage",11,"getIdentifier,andMetaData",2,1,""
"org.axonframework.eventhandling.EventMessage",11,"getIdentifier",1,1,""
"org.axonframework.eventhandling.GenericEventMessage",11,"getTimestamp",1,1,""
"org.axonframework.eventhandling.StreamingEventProcessor",11,"mergeSegment,releaseSegment,splitSegment",3,1,""
"org.axonframework.eventsourcing.eventstore.EventStore",11,"readEvents",1,1,""
"org.axonframework.queryhandling.SimpleQueryBus",11,"registerHandlerInterceptor,builder,queryUpdateEmitter",3,1,""
"org.axonframework.test.eventscheduler.StubEventScheduler",11,"getCurrentDateTime,getScheduledItems",2,1,""
"org.axonframework.commandhandling.CommandMessage",10,"getCommandName",1,1,""
"org.axonframework.commandhandling.GenericCommandMessage",10,"asCommandMessage",1,1,""
"org.axonframework.common.caching.WeakReferenceCache",10,"access$000",1,1,""
"org.axonframework.config.AggregateConfiguration",10,"repository,snapshotFilter,aggregateType,aggregateFactory",4,1,""
"org.axonframework.config.Configuration",10,"findModules,eventProcessingConfiguration",2,1,""
"org.axonframework.config.Configuration",10,"upcasterChain,eventSerializer",2,1,""
"org.axonframework.config.Configuration",10,"getComponent",1,1,""
"org.axonframework.eventhandling.AbstractEventProcessor",10,"reportIgnored,canHandle,processInUnitOfWork",3,1,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getAggregateIdentifier,getType",2,1,""
"org.axonframework.eventhandling.EventMessage",10,"getIdentifier,andMetaData",2,1,""
"org.axonframework.eventhandling.EventMessage",10,"getIdentifier",1,1,""
"org.axonframework.eventhandling.EventMessage",10,"andMetaData",1,1,""
"org.axonframework.eventsourcing.eventstore.EmbeddedEventStore$EventConsumer",10,"access$2500,access$2600",2,1,""
"org.axonframework.eventsourcing.eventstore.legacyjpa.EmbeddedEventStore$EventConsumer",10,"access$2700,access$2800",2,1,""
"org.axonframework.messaging.AbstractMessage",10,"withMetaData,andMetaData",2,1,""
"org.axonframework.messaging.MessageDecorator",10,"serializePayload,getPayload",2,1,""
"org.axonframework.messaging.SimpleHandlerAttributes",10,"contains,getAll,mergedWith,get,isEmpty",5,1,""
"org.axonframework.modelling.saga.Saga",10,"isActive,getAssociationValues",2,1,""
"org.axonframework.queryhandling.QueryMessage",10,"getResponseType,getQueryName",2,1,""
"org.axonframework.queryhandling.QueryMessage",10,"getResponseType",1,1,""
"org.axonframework.tracing.LoggingSpanFactory",10,"access$100",1,1,""
"org.axonframework.tracing.opentelemetry.OpenTelemetrySpanFactory",10,"builder",1,1,""
"org.axonframework.commandhandling.CommandMessage",9,"withMetaData",1,1,""
"org.axonframework.commandhandling.CommandMessage",9,"andMetaData",1,1,""
"org.axonframework.commandhandling.gateway.DefaultCommandGateway",9,"access$100",1,1,""
"org.axonframework.config.Configuration",9,"lifecycleRegistry",1,1,""
"org.axonframework.config.Configuration",9,"start",1,1,""
"org.axonframework.config.Configuration",9,"spanFactory",1,1,""
"org.axonframework.config.Configuration",9,"eventProcessingConfiguration",1,1,""
"org.axonframework.config.Configurer",9,"registerComponent,configureEventStore,configureCommandBus,registerModule,configureQueryBus",5,1,""
"org.axonframework.config.Configurer",9,"registerComponent,configureEmbeddedEventStore",2,1,""
"org.axonframework.config.Configurer",9,"configureSerializer,configureMessageSerializer,configureEventSerializer",3,1,""
"org.axonframework.config.Configurer",9,"onInitialize",1,1,""
"org.axonframework.eventhandling.GlobalSequenceTrackingToken",9,"getGlobalIndex,offsetBy,next",3,1,""
"org.axonframework.eventhandling.MultiStreamableMessageSource$IdentifiedStreamableMessageSource",9,"createHeadToken,sourceId,createTailToken,createTokenAt,createTokenSince",5,1,""
"org.axonframework.eventhandling.StreamingEventProcessor",9,"getTokenStoreIdentifier,maxCapacity,processingStatus",3,1,""
"org.axonframework.eventhandling.scheduling.dbscheduler.DbSchedulerEventScheduler",9,"binaryTask,builder",2,1,""
"org.axonframework.eventhandling.scheduling.java.SimpleEventScheduler",9,"access$600,access$300,access$400,access$500",4,1,""
"org.axonframework.eventsourcing.eventstore.EmbeddedEventStore$EventConsumer",9,"access$1900",1,1,""
"org.axonframework.eventsourcing.eventstore.legacyjpa.EmbeddedEventStore$EventConsumer",9,"access$2000",1,1,""
"org.axonframework.queryhandling.QueryMessage",9,"queryName",1,1,""
"org.axonframework.queryhandling.QueryMessage",9,"getResponseType",1,1,""
"org.axonframework.axonserver.connector.command.AxonServerCommandBus",8,"builder",1,1,""
"org.axonframework.axonserver.connector.event.axon.AxonServerEventScheduler",8,"builder",1,1,""
"org.axonframework.commandhandling.distributed.ConsistentHash$ConsistentHashMember",8,"access$100,equals,hashes,toString",4,1,""
"org.axonframework.config.AggregateConfiguration",8,"aggregateType,aggregateFactory",2,1,""
"org.axonframework.config.SagaConfigurer$SagaConfigurationImpl",8,"access$000",1,1,""
"org.axonframework.disruptor.commandhandling.CommandHandlerInvoker$DisruptorRepository",8,"access$000",1,1,""
"org.axonframework.disruptor.commandhandling.DisruptorCommandBus",8,"access$1900,access$2300,access$2100,access$2400,access$2200",5,1,""
"org.axonframework.disruptor.commandhandling.DisruptorCommandBus",8,"access$1900,access$2100",2,1,""
"org.axonframework.eventhandling.SimpleEventHandlerInvoker",8,"builder",1,1,""
"org.axonframework.eventhandling.SimpleEventHandlerInvoker",8,"access$300",1,1,""
"org.axonframework.eventhandling.scheduling.jobrunr.JobRunrEventScheduler",8,"builder",1,1,""
"org.axonframework.eventsourcing.snapshotting.RevisionSnapshotFilter",8,"builder",1,1,""
"org.axonframework.modelling.command.AbstractRepository",8,"prepareForCommit",1,1,""
"org.axonframework.modelling.saga.repository.inmemory.InMemorySagaStore",8,"findSagas,size",2,1,""
"org.axonframework.axonserver.connector.AxonServerConnectionManager",7,"isConnected,getConnection",2,1,""
"org.axonframework.config.AggregateConfiguration",7,"repository",1,1,""
"org.axonframework.eventhandling.DomainEventData",7,"getSequenceNumber,getAggregateIdentifier,getType",3,1,""
"org.axonframework.eventhandling.EventMessageHandler",7,"prepareReset,handle,supportsReset",3,1,""
"org.axonframework.eventhandling.MultiSourceTrackingToken",7,"advancedTo,getTokenForStream",2,1,""
"org.axonframework.eventhandling.MultiStreamableMessageSource",7,"access$200",1,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",7,"builder,subscribe",2,1,""
"org.axonframework.modelling.saga.repository.jdbc.JdbcSagaStore",7,"builder",1,1,""
"org.axonframework.serialization.JavaSerializer",7,"builder",1,1,""
"org.axonframework.serialization.json.JacksonSerializer",7,"builder",1,1,""
"org.axonframework.axonserver.connector.processor.EventProcessorControlService",6,"access$000",1,1,""
"org.axonframework.commandhandling.SimpleCommandBus",6,"builder,registerHandlerInterceptor",2,1,""
"org.axonframework.common.lock.PessimisticLockFactory$DisposableLock",6,"isHeldBy,lock,queuedThreads",3,1,""
"org.axonframework.disruptor.commandhandling.DisruptorCommandBus",6,"createRepository",1,1,""
"org.axonframework.disruptor.commandhandling.DisruptorCommandBus",6,"access$1900",1,1,""
"org.axonframework.eventhandling.MultiStreamableMessageSource$IdentifiedStreamableMessageSource",6,"sourceId,openStream",2,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"builder,subscribe",2,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"access$400,access$600,access$500",3,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"access$400,resolveReturnValue",2,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"access$400,access$700",2,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"access$600,access$500",2,1,""
"org.axonframework.modelling.command.Repository",6,"load,loadOrCreate,newInstance",3,1,""
"org.axonframework.modelling.saga.repository.legacyjpa.JpaSagaStore",6,"builder",1,1,""
"org.axonframework.queryhandling.annotation.AnnotationQueryHandlerAdapter",6,"subscribe",1,1,""
"org.axonframework.serialization.SimpleSerializedObject",6,"getData,getContentType,getType",3,1,""
"org.axonframework.serialization.SimpleSerializedType",6,"emptyType",1,1,""
"org.axonframework.axonserver.connector.AxonServerConnectionManager",5,"isConnected,getConnection",2,1,""
"org.axonframework.common.transaction.NoTransactionManager",5,"instance",1,1,""
"org.axonframework.eventhandling.AbstractEventBus",5,"prepareCommit",1,1,""
"org.axonframework.eventhandling.DefaultEventBusSpanFactory",5,"builder",1,1,""
"org.axonframework.eventhandling.DomainEventData",5,"getType",1,1,""
"org.axonframework.eventhandling.EventMessageHandler",5,"handle",1,1,""
"org.axonframework.eventhandling.GapAwareTrackingToken",5,"getGaps,getIndex",2,1,""
"org.axonframework.eventhandling.GlobalSequenceTrackingToken",5,"getGlobalIndex",1,1,""
"org.axonframework.eventhandling.WrappedToken",5,"advance",1,1,""
"org.axonframework.eventhandling.WrappedToken",5,"unwrapLowerBound",1,1,""
"org.axonframework.eventhandling.deadletter.DeadLetteringEventHandlerInvoker",5,"builder",1,1,""
"org.axonframework.eventsourcing.conflictresolution.ConflictResolution",5,"initialize",1,1,""
"org.axonframework.eventsourcing.conflictresolution.DefaultConflictResolver",5,"ensureConflictsResolved",1,1,""
"org.axonframework.modelling.command.DefaultRepositorySpanFactory",5,"builder",1,1,""
"org.axonframework.queryhandling.DefaultQueryUpdateEmitterSpanFactory",5,"builder",1,1,""
"org.axonframework.eventhandling.DefaultEventProcessorSpanFactory",4,"builder",1,1,""
"org.axonframework.eventsourcing.DefaultSnapshotterSpanFactory",4,"builder",1,1,""
"org.axonframework.messaging.annotation.DefaultParameterResolverFactory$MetaDataParameterResolver",4,"access$000",1,1,""
"org.axonframework.modelling.saga.DefaultSagaManagerSpanFactory",4,"builder",1,1,""
"org.axonframework.monitoring.NoOpMessageMonitor",4,"instance",1,1,""
"org.axonframework.queryhandling.FluxSinkWrapper",4,"complete",1,1,""
"org.axonframework.queryhandling.SinksManyWrapper",4,"complete",1,1,""

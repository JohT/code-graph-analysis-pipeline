"fullDependentTypeName","declaredMethods","calledMethodNames","calledMethods","callerTypes","Source Cypher File: Candidates_for_Interface_Segregation.cypher"
"org.axonframework.commandhandling.CommandMessage",9,"getCommandName",1,18,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getSequenceNumber",1,9,""
"org.axonframework.eventhandling.EventMessage",9,"getTimestamp,getIdentifier",2,9,""
"org.axonframework.eventhandling.TrackedEventMessage",10,"trackingToken",1,8,""
"org.axonframework.eventhandling.EventMessage",9,"getIdentifier",1,8,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getType,getAggregateIdentifier,getSequenceNumber",3,6,""
"org.axonframework.messaging.ResultMessage",9,"isExceptional,exceptionResult",2,6,""
"org.axonframework.commandhandling.GenericCommandResultMessage",14,"asCommandResultMessage",1,5,""
"org.axonframework.deadline.GenericDeadlineMessage",11,"asDeadlineMessage",1,5,""
"org.axonframework.eventhandling.TrackedEventMessage",12,"trackingToken",1,4,""
"org.axonframework.deadline.DeadlineMessage",10,"getDeadlineName",1,4,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getType",1,4,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getAggregateIdentifier",1,4,""
"org.axonframework.eventhandling.GenericEventMessage",10,"asEventMessage",1,4,""
"org.axonframework.common.transaction.NoTransactionManager",4,"instance",1,4,""
"org.axonframework.commandhandling.GenericCommandResultMessage",15,"asCommandResultMessage",1,3,""
"org.axonframework.modelling.command.inspection.AggregateModel",13,"type",1,3,""
"org.axonframework.eventhandling.DomainEventMessage",11,"getType,getAggregateIdentifier,getSequenceNumber",3,3,""
"org.axonframework.eventhandling.GenericEventMessage",11,"asEventMessage",1,3,""
"org.axonframework.eventsourcing.eventstore.EventStore",11,"readEvents",1,3,""
"org.axonframework.eventhandling.DomainEventMessage",10,"getAggregateIdentifier,getSequenceNumber",2,3,""
"org.axonframework.eventhandling.GapAwareTrackingToken",10,"getGaps,newInstance,withGapsTruncatedAt,getIndex,advanceTo",5,3,""
"org.axonframework.eventhandling.EventMessage",9,"getTimestamp",1,3,""
"org.axonframework.eventhandling.TrackedEventData",5,"trackingToken",1,3,""
"org.axonframework.eventhandling.tokenstore.ConfigToken",5,"get",1,3,""
"org.axonframework.eventhandling.TrackerStatus",17,"split,getTrackingToken,getSegment",3,2,""
"org.axonframework.modelling.command.inspection.AnnotatedAggregate",17,"initialize,initSequence,getAggregateRoot",4,2,""
"org.axonframework.queryhandling.SimpleQueryUpdateEmitter",17,"builder",1,2,""
"org.axonframework.commandhandling.CommandMessageHandlingMember",14,"isFactoryHandler,commandName",2,2,""
"org.axonframework.commandhandling.GenericCommandResultMessage",14,"asCommandResultMessage",2,2,""
"org.axonframework.deadline.DeadlineMessage",14,"getDeadlineName",1,2,""
"org.axonframework.messaging.GenericResultMessage",14,"asResultMessage",1,2,""
"org.axonframework.messaging.annotation.WrappedMessageHandlingMember",14,"handle",1,2,""
"org.axonframework.eventhandling.DomainEventMessage",13,"getAggregateIdentifier,getSequenceNumber",2,2,""
"org.axonframework.eventhandling.ReplayToken",13,"createReplayToken",1,2,""
"org.axonframework.eventhandling.ReplayToken",13,"isReplay",1,2,""
"org.axonframework.queryhandling.SubscriptionQueryMessage",12,"getUpdateResponseType",1,2,""
"org.axonframework.commandhandling.GenericCommandMessage",11,"asCommandMessage",1,2,""
"org.axonframework.eventhandling.DomainEventMessage",11,"getSequenceNumber",1,2,""
"org.axonframework.eventhandling.TrackedEventMessage",11,"trackingToken",1,2,""
"org.axonframework.eventhandling.TrackedEventMessage",11,"trackingToken,withTrackingToken",2,2,""
"org.axonframework.eventhandling.GenericEventMessage",10,"describeTo",1,2,""
"org.axonframework.messaging.ResultMessage",10,"isExceptional,exceptionResult",2,2,""
"org.axonframework.commandhandling.gateway.DefaultCommandGateway",9,"builder",1,2,""
"org.axonframework.config.Configuration",9,"getComponent",1,2,""
"org.axonframework.eventhandling.EventMessage",9,"andMetaData",1,2,""
"org.axonframework.queryhandling.QueryMessage",9,"getResponseType,getQueryName",2,2,""
"org.axonframework.queryhandling.QueryMessage",9,"getQueryName",1,2,""
"org.axonframework.commandhandling.AnnotationCommandHandlerAdapter",6,"subscribe",1,2,""
"org.axonframework.messaging.annotation.InterceptorChainParameterResolverFactory",5,"currentInterceptorChain",1,2,""
"org.axonframework.serialization.ChainingConverter",5,"registerConverter",1,2,""
"org.axonframework.serialization.SimpleSerializedObject",4,"getType",1,2,""
"org.axonframework.config.DefaultConfigurer",66,"invokeShutdownHandlers,access$300,access$400,invokeStartHandlers,access$900,defaultComponent,access$1200,access$800,access$1300,access$1100,access$1500,access$700,access$500,access$1000,access$200,access$600,access$1400",17,1,""
"org.axonframework.test.saga.FixtureExecutionResultImpl",56,"registerStartRecordingCallback,startRecording",2,1,""
"org.axonframework.test.aggregate.ResultValidatorImpl",53,"recordException,assertValidRecording",2,1,""
"org.axonframework.test.aggregate.AggregateTestFixture",51,"access$700,access$900,access$800,access$600,access$602",5,1,""
"org.axonframework.test.aggregate.AggregateTestFixture",48,"access$1100",1,1,""
"org.axonframework.test.saga.SagaTestFixture",37,"access$300,handleInSaga,currentTime",3,1,""
"org.axonframework.messaging.unitofwork.AbstractUnitOfWork",34,"rollback",1,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",31,"access$1300,access$900,access$1000,access$800,doSleepFor,access$1800,access$1400,access$1100,access$1600,getState,access$1500,access$2100,access$600,access$2200,access$700,access$1200,access$1700,access$2000",18,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",28,"access$1300,access$900,access$1000,access$800,access$1400,access$1100,getState,access$1500,access$1200,processingLoop",10,1,""
"org.axonframework.config.Configuration",27,"handlerDefinition,messageMonitor,getComponent,eventBus,parameterResolverFactory,spanFactory,correlationDataProviders",7,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",27,"access$600,access$700",2,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",26,"access$1000,access$800,releaseSegment,access$2000",4,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",26,"access$1000,access$800,access$2000",3,1,""
"org.axonframework.eventhandling.TrackingEventProcessor",26,"builder",1,1,""
"org.axonframework.eventhandling.pooled.PooledStreamingEventProcessor",26,"builder",1,1,""
"org.axonframework.config.Configuration",25,"messageSerializer,commandBus,serializer,findModules,handlerDefinition,messageMonitor,getComponent,upcasterChain,eventStore,eventSerializer,repository,snapshotFilter,eventBus,scopeAwareProvider,parameterResolverFactory,spanFactory,queryBus,correlationDataProviders",19,1,""
"org.axonframework.eventhandling.TrackerStatus",24,"caughtUp,markError,isCaughtUp,advancedTo,unmarkError,getSegment,isErrorState",7,1,""
"org.axonframework.eventhandling.TrackerStatus",19,"markError,advancedTo,isErrorState",3,1,""
"org.axonframework.modelling.saga.AnnotatedSaga",19,"root,getSagaIdentifier,isActive,getAssociationValues",4,1,""
"org.axonframework.test.deadline.StubDeadlineManager",19,"getScheduledDeadlines,getTriggeredDeadlines,getCurrentDateTime",3,1,""
"org.axonframework.modelling.command.inspection.AnnotatedAggregateMetaModelFactory$AnnotatedAggregateModel",18,"access$100,access$000",2,1,""
"org.axonframework.eventhandling.TrackerStatus",17,"caughtUp",1,1,""
"org.axonframework.eventhandling.TrackerStatus",17,"getSegment,getInternalTrackingToken",2,1,""
"org.axonframework.eventhandling.TrackerStatus",17,"getSegment",1,1,""
"org.axonframework.queryhandling.DefaultQueryGateway",17,"builder",1,1,""
"org.axonframework.commandhandling.GenericCommandResultMessage",16,"asCommandResultMessage",2,1,""
"org.axonframework.config.Configuration",16,"commandBus,handlerDefinition,eventStore,repository,getComponent,eventBus,parameterResolverFactory,spanFactory",8,1,""
"org.axonframework.eventhandling.MergedTrackingToken",16,"upperSegmentToken,position,isMergeInProgress,mergePosition,lowerSegmentToken",5,1,""
"org.axonframework.eventhandling.ReplayToken",16,"isReplay,getTokenAtReset,lowerBound,position,createReplayToken",6,1,""
"org.axonframework.eventhandling.deadletter.jdbc.JdbcDeadLetter",16,"getSequenceIndex,getSequenceIdentifier,getIdentifier",3,1,""
"org.axonframework.eventhandling.deadletter.jdbc.JdbcSequencedDeadLetterQueue",16,"deadLetterSequence",1,1,""
"org.axonframework.eventhandling.deadletter.jpa.JpaSequencedDeadLetterQueue",16,"deadLetterSequence",1,1,""
"org.axonframework.eventhandling.deadletter.legacyjpa.JpaSequencedDeadLetterQueue",16,"deadLetterSequence",1,1,""
"org.axonframework.modelling.command.inspection.AnnotatedAggregate",16,"publish,publishOnEventBus,doApply",3,1,""
"org.axonframework.queryhandling.GenericQueryResponseMessage",16,"asResponseMessage,asNullableResponseMessage",2,1,""
"org.axonframework.commandhandling.CommandMessageHandlingMember",15,"isFactoryHandler,commandName",2,1,""
"org.axonframework.commandhandling.CommandMessageHandlingMember",15,"routingKey,commandName",2,1,""
"org.axonframework.commandhandling.GenericCommandResultMessage",15,"asCommandResultMessage",2,1,""
"org.axonframework.eventhandling.MultiStreamableMessageSource$SourceIdAwareBlockingStream",15,"peek,close,setOnAvailableCallback,hasNextAvailable,skipMessagesWithPayloadTypeOf,access$300",7,1,""
"org.axonframework.eventhandling.deadletter.jdbc.DefaultDeadLetterStatementFactory",15,"builder",1,1,""
"org.axonframework.eventhandling.deadletter.jpa.JpaDeadLetter",15,"getSequenceIdentifier,getIndex,getId",3,1,""
"org.axonframework.eventhandling.deadletter.legacyjpa.JpaDeadLetter",15,"getSequenceIdentifier,getId,getIndex",3,1,""
"org.axonframework.eventhandling.tokenstore.jpa.JpaTokenStore",15,"builder",1,1,""
"org.axonframework.messaging.annotation.WrappedMessageHandlingMember",15,"handle,canHandle",2,1,""
"org.axonframework.modelling.command.inspection.AggregateModel",15,"type,getVersion,declaredType",3,1,""
"org.axonframework.modelling.command.inspection.AnnotatedAggregate",15,"isDeleted,version,initialize,identifier",4,1,""
"org.axonframework.modelling.saga.repository.jdbc.GenericSagaSqlSchema",15,"sql_loadSaga",1,1,""
"org.axonframework.queryhandling.GenericSubscriptionQueryUpdateMessage",15,"asUpdateMessage",1,1,""
"org.axonframework.serialization.upcasting.event.InitialEventRepresentation",15,"getSequenceNumber",1,1,""
"org.axonframework.test.aggregate.AggregateTestFixture$IdentifierValidatingRepository",15,"access$500,getAggregate,access$200,send,load,access$300,newInstance",7,1,""
"org.axonframework.commandhandling.CommandMessageHandlingMember",14,"commandName",1,1,""
"org.axonframework.messaging.GenericResultMessage",14,"asResultMessage",2,1,""
"org.axonframework.messaging.annotation.WrappedMessageHandlingMember",14,"canHandle",1,1,""
"org.axonframework.modelling.command.inspection.AggregateModel",14,"types,type",2,1,""
"org.axonframework.queryhandling.GenericQueryResponseMessage",14,"asResponseMessage",1,1,""
"org.axonframework.queryhandling.QueryMessage",14,"queryName",1,1,""
"org.axonframework.queryhandling.QueryMessage",14,"getResponseType,getQueryName",2,1,""
"org.axonframework.queryhandling.annotation.QueryHandlingMember",14,"getResultType,getQueryName",2,1,""
"org.axonframework.config.Configuration",13,"handlerDefinition,eventProcessingConfiguration,resourceInjector,parameterResolverFactory,spanFactory",5,1,""
"org.axonframework.eventhandling.EventMessage",13,"getIdentifier",1,1,""
"org.axonframework.eventhandling.GenericDomainEventMessage",13,"andMetaData",1,1,""
"org.axonframework.eventhandling.GenericDomainEventMessage",13,"describeTo",1,1,""
"org.axonframework.eventhandling.MergedTrackingToken",13,"isLowerSegmentAdvanced,isUpperSegmentAdvanced,upperSegmentToken,lowerSegmentToken",4,1,""
"org.axonframework.eventhandling.MergedTrackingToken",13,"merged",1,1,""
"org.axonframework.eventhandling.ReplayToken",13,"replayContext",1,1,""
"org.axonframework.eventhandling.TrackedEventMessage",13,"trackingToken",1,1,""
"org.axonframework.modelling.command.inspection.AggregateModel",13,"types",1,1,""
"org.axonframework.modelling.command.inspection.AggregateModel",13,"declaredType",1,1,""
"org.axonframework.tracing.LoggingSpanFactory",13,"access$100",1,1,""
"org.axonframework.commandhandling.GenericCommandMessage",12,"asCommandMessage",1,1,""
"org.axonframework.eventhandling.GenericEventMessage",12,"asEventMessage",1,1,""
"org.axonframework.modelling.command.LockAwareAggregate",12,"isLockHeld,version,getWrappedAggregate",3,1,""
"org.axonframework.queryhandling.StreamingQueryMessage",12,"getResponseType",1,1,""
"org.axonframework.test.eventscheduler.StubEventScheduler",12,"initializeAt,advanceTimeBy,getCurrentDateTime,advanceTimeTo",4,1,""
"org.axonframework.commandhandling.CommandMessage",11,"getCommandName",1,1,""
"org.axonframework.commandhandling.CommandMessage",11,"andMetaData",1,1,""
"org.axonframework.commandhandling.SimpleCommandBus",11,"dispatch,builder,subscribe,registerHandlerInterceptor,registerDispatchInterceptor",5,1,""
"org.axonframework.config.AggregateConfigurer",11,"defaultConfiguration",1,1,""
"org.axonframework.config.Configuration",11,"eventBus",1,1,""
"org.axonframework.disruptor.commandhandling.CommandHandlerInvoker$DisruptorRepository",11,"newInstance,load,loadOrCreate",4,1,""
"org.axonframework.eventhandling.EventMessage",11,"andMetaData,getIdentifier",2,1,""
"org.axonframework.eventhandling.EventMessage",11,"getIdentifier",1,1,""
"org.axonframework.eventhandling.GenericEventMessage",11,"getTimestamp",1,1,""
"org.axonframework.eventsourcing.eventstore.EventStore",11,"storeSnapshot,readEvents",2,1,""
"org.axonframework.modelling.saga.Saga",11,"getAssociationValues,isActive,getSagaIdentifier",3,1,""
"org.axonframework.queryhandling.SimpleQueryBus",11,"builder",1,1,""
"org.axonframework.queryhandling.SimpleQueryBus",11,"access$800",1,1,""
"org.axonframework.queryhandling.SimpleQueryBus",11,"access$700",1,1,""
"org.axonframework.test.eventscheduler.StubEventScheduler",11,"getCurrentDateTime,getScheduledItems",2,1,""
"org.axonframework.test.saga.EventValidator",11,"assertPublishedEvents,assertPublishedEventsMatching,startRecording",3,1,""
"org.axonframework.commandhandling.CommandMessage",10,"getCommandName",1,1,""
"org.axonframework.commandhandling.GenericCommandMessage",10,"asCommandMessage",1,1,""
"org.axonframework.common.caching.WeakReferenceCache",10,"access$000",1,1,""
"org.axonframework.config.AggregateConfiguration",10,"aggregateFactory,repository,aggregateType,snapshotFilter",4,1,""
"org.axonframework.config.Configuration",10,"findModules,eventProcessingConfiguration",2,1,""
"org.axonframework.eventhandling.AbstractEventProcessor",10,"reportIgnored,processInUnitOfWork,canHandle",3,1,""
"org.axonframework.eventhandling.EventMessage",10,"andMetaData,getIdentifier",2,1,""
"org.axonframework.eventhandling.EventMessage",10,"andMetaData",1,1,""
"org.axonframework.eventhandling.SimpleEventHandlerInvoker",10,"eventHandlers,invokeHandlers,sequencingPolicyMatchesSegment,performReset,sequenceIdentifier",5,1,""
"org.axonframework.eventsourcing.eventstore.EmbeddedEventStore$EventConsumer",10,"access$2600,access$2500",2,1,""
"org.axonframework.eventsourcing.eventstore.legacyjpa.EmbeddedEventStore$EventConsumer",10,"access$2700,access$2800",2,1,""
"org.axonframework.messaging.AbstractMessage",10,"withMetaData,andMetaData",2,1,""
"org.axonframework.messaging.SimpleHandlerAttributes",10,"get,contains,getAll,mergedWith,isEmpty",5,1,""
"org.axonframework.tracing.LoggingSpanFactory",10,"access$100",1,1,""
"org.axonframework.commandhandling.CommandMessage",9,"withMetaData",1,1,""
"org.axonframework.commandhandling.CommandMessage",9,"andMetaData",1,1,""
"org.axonframework.commandhandling.gateway.DefaultCommandGateway",9,"access$100",1,1,""
"org.axonframework.config.Configuration",9,"start",1,1,""
"org.axonframework.config.Configuration",9,"eventProcessingConfiguration",1,1,""
"org.axonframework.config.Configurer",9,"registerComponent,configureEmbeddedEventStore",2,1,""
"org.axonframework.eventhandling.GlobalSequenceTrackingToken",9,"next,getGlobalIndex,offsetBy",3,1,""
"org.axonframework.eventhandling.MultiStreamableMessageSource$IdentifiedStreamableMessageSource",9,"createTokenSince,createTailToken,sourceId,createTokenAt,createHeadToken",5,1,""
"org.axonframework.eventhandling.scheduling.java.SimpleEventScheduler",9,"access$300,access$600,access$500,access$400",4,1,""
"org.axonframework.eventsourcing.eventstore.EmbeddedEventStore$EventConsumer",9,"access$1900",1,1,""
"org.axonframework.eventsourcing.eventstore.legacyjpa.EmbeddedEventStore$EventConsumer",9,"access$2000",1,1,""
"org.axonframework.messaging.MessageDecorator",9,"describeTo",1,1,""
"org.axonframework.modelling.saga.Saga",9,"getSagaIdentifier",1,1,""
"org.axonframework.queryhandling.QueryMessage",9,"queryName",1,1,""
"org.axonframework.commandhandling.distributed.ConsistentHash$ConsistentHashMember",8,"access$100,toString,equals,hashes",4,1,""
"org.axonframework.config.AggregateConfiguration",8,"aggregateFactory,aggregateType",2,1,""
"org.axonframework.config.SagaConfigurer$SagaConfigurationImpl",8,"access$000",1,1,""
"org.axonframework.disruptor.commandhandling.CommandHandlerInvoker$DisruptorRepository",8,"access$000",1,1,""
"org.axonframework.disruptor.commandhandling.DisruptorCommandBus",8,"access$2200,access$2400,access$2100,access$1900,access$2300",5,1,""
"org.axonframework.disruptor.commandhandling.DisruptorCommandBus",8,"access$2100,access$1900",2,1,""
"org.axonframework.eventsourcing.snapshotting.RevisionSnapshotFilter",8,"builder",1,1,""
"org.axonframework.modelling.command.AbstractRepository",8,"prepareForCommit",1,1,""
"org.axonframework.modelling.saga.repository.inmemory.InMemorySagaStore",8,"size,findSagas",2,1,""
"org.axonframework.test.utils.RecordingCommandBus",8,"clearCommands,getDispatchedCommands",2,1,""
"org.axonframework.config.AggregateConfiguration",7,"repository",1,1,""
"org.axonframework.eventhandling.DomainEventData",7,"getAggregateIdentifier,getType,getSequenceNumber",3,1,""
"org.axonframework.eventhandling.EventMessageHandler",7,"supportsReset,handle,prepareReset",3,1,""
"org.axonframework.eventhandling.MultiSourceTrackingToken",7,"getTokenForStream,advancedTo",2,1,""
"org.axonframework.eventhandling.MultiStreamableMessageSource",7,"access$200",1,1,""
"org.axonframework.eventhandling.SimpleEventHandlerInvoker",7,"access$300",1,1,""
"org.axonframework.eventhandling.SimpleEventHandlerInvoker",7,"builder",1,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",7,"subscribe,builder",2,1,""
"org.axonframework.commandhandling.SimpleCommandBus",6,"builder",1,1,""
"org.axonframework.common.lock.PessimisticLockFactory$DisposableLock",6,"queuedThreads,isHeldBy,lock",3,1,""
"org.axonframework.disruptor.commandhandling.DisruptorCommandBus",6,"access$1900",1,1,""
"org.axonframework.disruptor.commandhandling.DisruptorCommandBus",6,"createRepository",1,1,""
"org.axonframework.eventhandling.MultiStreamableMessageSource$IdentifiedStreamableMessageSource",6,"sourceId,openStream",2,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"subscribe,builder",2,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"access$600,access$400,access$500",3,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"access$600,access$500",2,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"access$700,access$400",2,1,""
"org.axonframework.modelling.command.AggregateAnnotationCommandHandler",6,"resolveReturnValue,access$400",2,1,""
"org.axonframework.modelling.command.Repository",6,"newInstance,loadOrCreate,load",3,1,""
"org.axonframework.modelling.saga.repository.jpa.JpaSagaStore",6,"builder",1,1,""
"org.axonframework.queryhandling.annotation.AnnotationQueryHandlerAdapter",6,"subscribe",1,1,""
"org.axonframework.serialization.SimpleSerializedObject",6,"getData,getContentType,getType",3,1,""
"org.axonframework.serialization.SimpleSerializedType",6,"emptyType",1,1,""
"org.axonframework.test.utils.RecordingCommandBus",6,"setCallbackBehavior",1,1,""
"org.axonframework.eventhandling.AbstractEventBus",5,"prepareCommit",1,1,""
"org.axonframework.eventhandling.DomainEventData",5,"getType",1,1,""
"org.axonframework.eventhandling.DomainEventData",5,"getSequenceNumber",1,1,""
"org.axonframework.eventhandling.EventMessageHandler",5,"handle",1,1,""
"org.axonframework.eventhandling.GapAwareTrackingToken",5,"getGaps,getIndex",2,1,""
"org.axonframework.eventhandling.WrappedToken",5,"unwrapLowerBound",1,1,""
"org.axonframework.eventhandling.WrappedToken",5,"advance",1,1,""
"org.axonframework.eventhandling.deadletter.DeadLetteringEventHandlerInvoker",5,"builder",1,1,""
"org.axonframework.eventsourcing.conflictresolution.ConflictResolution",5,"initialize",1,1,""
"org.axonframework.messaging.annotation.InterceptorChainParameterResolverFactory",5,"callWithInterceptorChain",1,1,""
"org.axonframework.eventhandling.gateway.DefaultEventGateway",4,"builder",1,1,""
"org.axonframework.messaging.annotation.DefaultParameterResolverFactory$MetaDataParameterResolver",4,"access$000",1,1,""
"org.axonframework.monitoring.NoOpMessageMonitor",4,"instance",1,1,""
"org.axonframework.queryhandling.FluxSinkWrapper",4,"complete",1,1,""
"org.axonframework.queryhandling.SinksManyWrapper",4,"complete",1,1,""

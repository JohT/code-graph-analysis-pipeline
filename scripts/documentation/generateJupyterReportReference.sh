#!/usr/bin/env bash

# Generates "JUPYTER_REPORTS.md" containing a reference to all Jupyter Notebook Markdown reports in this directory and its subdirectories.
# This script was generated by Chat-GPT after some messages back and forth and then tuned manually.

# Fail on any error ("-e" = exit on first error, "-o pipefail" exist on errors within piped commands)
set -o errexit -o pipefail

# Markdown file name
markdown_file="JUPYTER_REPORTS.md"

echo "generateJupyterReportReference: Generating ${markdown_file}..."

{ 
  echo "# Jupyter Notebook Reports Reference" 
  echo ""
  echo "This document serves as a reference for all Jupyter Notebook reports in the current directory and its subdirectories."
  echo "It provides a table listing each file and its corresponding description found in the first header line."
  echo "This file was generated with the script [generateMarkdownReference.sh](./../scripts/documentation/generateMarkdownReference.sh)."
  echo ""
  echo "Report | Analysis | Description"
  echo "-------|----------|------------" 
} > ${markdown_file}

# Loop through all Markdown files in the current directory
find . -type f -name "*.md" | sort | while read -r report_file; do
    # Extract the first non-empty line that starts with '#'
    report_file_header_line=$(grep -m 1 -e '^#\+.*' "${report_file}")

    # Remove leading '#' characters and trim leading/trailing spaces
    description=$(echo "${report_file_header_line}" | sed -E 's/^#+\s*//')
    
    # Trim leading and trailing whitespace
    description=$(echo "${description}" | awk '{$1=$1;print}')

    # Extract the script file name without the path
    filename=$(basename "$report_file")
    
    if [ "$filename" = "${markdown_file}" ]; then
      continue
    fi
    
    # Extract the script file path without the name
    pathname=$(dirname "$report_file")
    
    # Extract the second part of the path after ./ that contains the analysis directory name
    analysisname=$(echo "${pathname}" | cut -d/ -f2)

    # Create a link to the script file in the table
    link="[${filename}](${report_file})"
    
    # Add the script file and its description to the Markdown table
    echo "| ${link} | ${analysisname%%.} | ${description} |" >> ${markdown_file}
done

echo "generateJupyterReportReference: Successfully generated ${markdown_file}."
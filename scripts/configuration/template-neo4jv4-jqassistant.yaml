jqassistant:
  # Controls whether the execution of jQAssistant shall be skipped
  #
  # -Djqassistant.skip: true|false
  skip: false

  # Defines the local and remote Maven repositories for retrieving additional plugins.
  repositories:
    # The path to the local repository.
    #
    # -Djqassistant.repositories.local (optional)
    local: ./../downloads/jqassistant-repository

  # The list of plugins to load and activate.
  #
  # Each plugin is identified using its Maven coordinates:
  #
  # -Djqassistant.plugins[0].group-id
  # -Djqassistant.plugins[0].artifact-id
  # -Djqassistant.plugins[0].version
  # -Djqassistant.plugins[0].classifier (optional)
  # -Djqassistant.plugins[0].type (optional)
  #plugins:
  #  - group-id:
  #    artifact-id:
  #    version:
  #    classifier:
  #    type:
  plugins:
    - group-id: org.jqassistant.plugin.typescript
      artifact-id: jqassistant-typescript-plugin
      version: 1.3.1
    - group-id: org.jqassistant.plugin
      artifact-id: jqassistant-npm-plugin
      version: 2.1.0-M1
    - group-id: de.kontext-e.jqassistant.plugin
      artifact-id: jqassistant.plugin.git
      version: 2.2.2


  # The store configuration
  store:
    # URI of the database to connect to. Supported URI schemes are 'file' for embedded databases and 'bolt' for connecting to a running Neo4j instance (3.x+), e.g.
    #
    # -Djqassistant.store.uri
    #uri: file://target/jqassistant/store
    uri: bolt://localhost:${NEO4J_BOLT_PORT:7687}

    # Settings for the embedded Neo4j store
    embedded:
      # Enable the HTTP and BOLT connector for the embedded store
      #
      # -Djqassistant.store.embedded.connector-enabled: true|false
      connector-enabled: false

      # The listen address for the HTTP and BOLT connectors
      #
      # -Djqassistant.store.embedded.listen-address
      listen-address: localhost

      # The BOLT connector port
      #
      # -Djqassistant.store.embedded.bolt-port
      bolt-port: 7687

      # The HTTP connector port
      #
      # -Djqassistant.store.embedded.http-port: 7474
      http-port: 7474

    # Settings for connecting to a remote Neo4j store
    remote:
      # The user name for authentication.
      #
      # -Djqassistant.store.username
      username: ${NEO4J_USER:neo4j}

      # The password for authentication.
      #
      # -Djqassistant.store.password
      password: ${NEO4J_INITIAL_PASSWORD}

      # Activate encryption level for 'bolt' connections.
      #
      # -Djqassistant.store.encryption: true|false
      encryption: false

      #The trust strategy for 'bolt' connections
      #
      # -Djqassistant.store.trust-strategy: trustAllCertificates|trustCustomCaSignedCertificates|trustSystemCaSignedCertificates
      trust-strategy: trustAllCertificates

      # The file containing the custom CA certificate for trust strategy.
      #
      # -Djqassistant.store.trust-certificate
      trust-certificate:

      # Additional properties to be passed to the remote store as key-value pairs.
      #
      # -Djqassistant.store.properties
      properties:

  # The Scanner configuration
  scan:
    # Indicates whether to initially reset the store (i.e. clear all nodes and relationships) before scanning.
    #
    # -Djqassistant.scan.reset: true|false
    reset: true

    # Specifies if a scan shall be continued if an error is encountered.
    #
    # -Djqassistant.scan.continue-on-error: true|false
    continue-on-error: false

    # The items to include for scanning.
    include:
      # A list of files to include.
      #
      #jqassistant.scan.include.files[0]
      files:
      # - src/folder

      # A list of URLs to include.
      #
      #jqassistant.scan.include.urls[0]
      urls:
      # - maven:repository::https://nexus/repository

    # The properties to configure scanner plugins as key-value pairs. The supported properties are plugin specific.
    #
    # -Djqassistant.scan.properties
    properties:
      # plugin.property.key: value
      file.exclude: "*/.DS_Store"
      json.file.exclude: "*/.reports/jqa/ts-output.json"

  # The analyze configuration
  analyze:
    # The rule configuration
    rule:
      # The name of the directory containing project rules.
      #
      # -Djqassistant.analyze.rule.directory
      directory: jqassistant/rules

      # The default severity of concepts without an explicit severity.
      #
      # -Djqassistant.analyze.rule.default-concept-severity: INFO|MINOR|MAJOR|CRITICAL|BLOCKER
      default-concept-severity: MINOR

      # The default severity of constraint without an explicit severity.
      #
      # -Djqassistant.analyze.rule.default-constraint-severity: INFO|MINOR|MAJOR|CRITICAL|BLOCKER
      default-constraint-severity: MAJOR

      # The default severity of groups without an explicit severity.
      #
      # -Djqassistant.analyze.rule.default-group-severity: INFO|MINOR|MAJOR|CRITICAL|BLOCKER
      default-group-severity:

    # The report configuration
    report:
      # The properties to configure report plugins. The supported properties are plugin specific.
      #
      # -Djqassistant.analyze.report.properties
      properties:
        # plugin.property.key: value

      # Determines the severity level for reporting a warning.
      #
      # -Djqassistant.analyze.report.warn-on-severity: INFO|MINOR|MAJOR|CRITICAL|BLOCKER|NEVER
      warn-on-severity: MINOR

      # Determines the severity level for reporting a failure.
      #
      # -Djqassistant.analyze.report.fail-on-severity: INFO|MINOR|MAJOR|CRITICAL|BLOCKER|NEVER
      fail-on-severity: MAJOR

      # Determines if jQAssistant shall continue the build if failures have been detected.
      #
      # -Djqassistant.analyze.report.continue-on-failure: true|false
      continue-on-failure: false

      # Create an archive containing all generated reports.
      #
      # -Djqassistant.analyze.report.create-archive: true|false
      create-archive: false

      # Output directory for analysis reports
      directory: ./runtime/jqassistant/report

    # The concepts to be applied.
    #
    # -Djqassistant.analyze.concepts[0]
    #  Migration to v2: https://github.com/jQAssistant/jqa-java-plugin/blob/master/src/main/asciidoc/release-notes.adoc
    concepts:
     - classpath:Resolve
     - dependency:Package
     - dependency:Artifact
     - java:JavaVersion

    # The constraints to be validated.
    #
    # -Djqassistant.analyze.constraints[0]
    constraints:
    # - my-constraint

    # The groups to be executed.
    #
    # -Djqassistant.analyze.groups[0]
    groups:
    # - spring-boot:Default

    # The parameters to be passed to the executed rules.
    #
    # -Djqassistant.analyze.rule-parameters."parameterName"
    rule-parameters:
    # parameterName: value

    # Execute concepts even if they have already been applied before
    #
    # -Djqassistant.analyze.execute-applied-concepts: true|false
    execute-applied-concepts: false

    # The execution time [seconds] for rules (concepts/constraints) to show a warning. Can be used as a hint for optimization.
    #
    # -Djqassistant.analyze.warn-on-rule-execution-time-seconds
    warn-on-rule-execution-time-seconds: 5
